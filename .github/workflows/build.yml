name: build

on: 
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Build binaries
      run: go run build/build.go

    - name: Run unit tests
      run: go test ./...

  integration-tests-bind:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run integration tests for BIND provider
      working-directory: integrationTest
      run: go test -v -verbose -provider BIND

  integration-tests-azure:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run integration test for AZURE DNS provider
      working-directory: integrationTest
      run: go test -v -verbose -provider AZURE_DNS
      env:
        AZURE_RESOURCE_GROUP: DNSControl
        AZURE_DOMAIN: dnscontrol-azure.com
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

  integration-tests-namedotcom:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run integration test for NAMEDOTCOM provider
      working-directory: integrationTest
      run: go test -v -verbose -provider NAMEDOTCOM
      env:
        NAMEDOTCOM_DOMAIN: dnscontrol-ndc.com
        NAMEDOTCOM_URL: api.name.com
        NAMEDOTCOM_USER: dnscontroltest
        NAMEDOTCOM_KEY: ${{ secrets.NAMEDOTCOM_KEY }}

  integration-tests-route53:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run integration test for ROUTE53 provider
      working-directory: integrationTest
      run: go test -v -verbose -provider ROUTE53
      env:
        R53_DOMAIN: dnscontroltest-r53.com
        R53_KEY_ID: ${{ secrets.R53_KEY_ID }}
        R53_KEY: ${{ secrets.R53_KEY }}

  integration-tests-gcloud:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run integration test for GCLOUD provider
      working-directory: integrationTest
      run: go test -v -verbose -provider GCLOUD
      env:
        GCLOUD_DOMAIN: dnscontroltest-gcloud.com
        GCLOUD_TYPE: service_account
        GCLOUD_EMAIL: dnscontrol@dnscontrol-dev.iam.gserviceaccount.com
        GCLOUD_PROJECT: dnscontrol-dev
        GCLOUD_PRIVATEKEY: ${{ secrets.GCLOUD_PRIVATEKEY }}

  integration-tests-cloudflareapi:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run integration test for CLOUDFLAREAPI provider
      working-directory: integrationTest
      run: go test -v -verbose -provider CLOUDFLAREAPI
      env:
        CF_DOMAIN: dnscontroltest-cf.com
        CF_TOKEN: ${{ secrets.CF_TOKEN }}
