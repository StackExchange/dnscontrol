name: StackExchange/dnscontrol/build
on:
  pull_request:

env:
  cache-key: 1639697695 #Change to force cache reset `pwsh > Get-Date -UFormat %s`
  gover: 1.18

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: golang:1.18
    env:
      TEST_RESULTS: "/tmp/test-results"
    steps:
    - uses: actions/checkout@v3.5.0
    - name: restore_cache
      uses: actions/cache@v3.3.1
      with:
        key: linux-go-{{ checksum "go.sum" }}-${{ env.cache-key }}
        restore-keys: linux-go-{{ checksum "go.sum" }}-${{ env.cache-key }}
        path: "/home/circleci/go/pkg/mod"
    - name: Install goreleaser
      run: go install github.com/goreleaser/goreleaser@latest
    - run: mkdir -p "$TEST_RESULTS"
    - name: Run unit tests
      run: gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "/tmp/test-results"
    - name: Build binaries
      run: goreleaser build<<^pipeline.git.tag>> --snapshot<</pipeline.git.tag>>
    - name: Enforce Go Formatted Code
      run: "[ `go fmt ./... | wc -l` -eq 0 ]"
  integration-tests:
    if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    container:
      image: golang:1.18
    needs:
    - build
    env:
      TEST_RESULTS: "/tmp/test-results"
      GOTESTSUM_FORMAT: testname
      BIND_DOMAIN: example.com
      HEXONET_DOMAIN: a-b-c-music.com
      HEXONET_ENTITY: OTE
      HEXONET_PW: test.passw0rd
      HEXONET_UID: test.user
      AZURE_DNS_RESOURCE_GROUP: DNSControl
      GCLOUD_EMAIL: dnscontrol@dnscontrol-dev.iam.gserviceaccount.com
      GCLOUD_PROJECT: dnscontrol-dev
      GCLOUD_TYPE: service_account
      NAMEDOTCOM_URL: api.name.com
      NAMEDOTCOM_USER: dnscontroltest
    strategy:
      matrix:
        provider:
        - BIND
        - HEXONET
        - AZURE_DNS
        - CLOUDFLAREAPI
        - GCLOUD
        - NAMEDOTCOM
        - ROUTE53
        - CLOUDNS
        - DIGITALOCEAN
        - GANDI_V5
        - HEDNS
        - INWX
        - NS1
        - POWERDNS
        - TRANSIP
    steps:
    - name: Test ${{ matrix.provider }} set
      run: |-
        if [ -z "$${{ matrix.provider }}_DOMAIN" ] ; then
          echo "Skip test for ${{ matrix.provider }} provider"
          circleci-agent step halt
        fi
    - uses: actions/checkout@v3.5.0
    - run: mkdir -p "$TEST_RESULTS"
    - name: restore_cache
      uses: actions/cache@v3.3.1
      with:
        key: linux-go-{{ checksum "go.sum" }}-${{ env.cache-key }}
        restore-keys: linux-go-{{ checksum "go.sum" }}-${{ env.cache-key }}
    - name: Run integration tests for ${{ matrix.provider }} provider
      run: |-
        if [ -n "$${{ matrix.provider }}_DOMAIN" ] ; then
          gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- -timeout 30m -v -verbose -provider ${{ matrix.provider }} -cfworkers=false
        else
          echo "Skip test for ${{ matrix.provider }} provider"
        fi
      working-directory: integrationTest
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "/tmp/test-results"
  integration-tests-diff2:
    if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    container:
      image: golang:1:18
    needs:
    - integration-tests
    env:
      TEST_RESULTS: "/tmp/test-results"
      GOTESTSUM_FORMAT: testname
      BIND_DOMAIN: example.com
      HEXONET_DOMAIN: a-b-c-music.com
      HEXONET_ENTITY: OTE
      HEXONET_PW: test.passw0rd
      HEXONET_UID: test.user
      AZURE_DNS_RESOURCE_GROUP: DNSControl
      GCLOUD_EMAIL: dnscontrol@dnscontrol-dev.iam.gserviceaccount.com
      GCLOUD_PROJECT: dnscontrol-dev
      GCLOUD_TYPE: service_account
      NAMEDOTCOM_URL: api.name.com
      NAMEDOTCOM_USER: dnscontroltest
    strategy:
      matrix:
        provider:
        - BIND
        - HEXONET
        - AZURE_DNS
        - CLOUDFLAREAPI
        - GCLOUD
        - NAMEDOTCOM
        - ROUTE53
        - CLOUDNS
        - DIGITALOCEAN
        - GANDI_V5
        - HEDNS
        - INWX
        - NS1
        - POWERDNS
        - TRANSIP
    steps:
    - name: Test ${{ matrix.provider }} set
      run: |-
        if [ -z "$${{ matrix.provider }}_DOMAIN" ] ; then
          echo "Skip test for ${{ matrix.provider }} provider"
          circleci-agent step halt
        fi
    - uses: actions/checkout@v3.5.0
    - run: mkdir -p "$TEST_RESULTS"
    - name: restore_cache
      uses: actions/cache@v3.3.1
      with:
        key: linux-go-{{ checksum "go.sum" }}-${{ env.cache-key }}
        restore-keys: linux-go-{{ checksum "go.sum" }}-${{ env.cache-key }}
    - name: Run integration tests for ${{ matrix.provider }} provider
      run: |-
        if [ -n "$${{ matrix.provider }}_DOMAIN" ] ; then
          gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- -timeout 30m -v -verbose -provider ${{ matrix.provider }} -cfworkers=false -diff2
        else
          echo "Skip test for ${{ matrix.provider }} provider"
        fi
      working-directory: integrationTest
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: "/tmp/test-results"
#  release:
#    if: # GitHub does not currently support regular expressions inside if conditions
##         (github.ref == 'refs/tags//v[0-9]+(\.[0-9]+)*(-.*)*/') && (github.ref != 'refs/heads//.*/')
#    runs-on: ubuntu-latest
#    container:
#      image: golang:${{ env.gover }}
#    needs:
#    - build
#    env:
#      DOCKERHUB_ACCESS_TOKEN:
#      DOCKERHUB_USERNAME:
#    steps:
#    - uses: actions/checkout@v3.5.0
##     # 'setup_remote_docker' was not transformed because there is no suitable equivalent in GitHub Actions
#    - uses: "./.github/actions/docker_check"
#      with:
#        docker-password: "${{ secrets.DOCKER_PASSWORD }}"
#        docker-username: "${{ env.DOCKER_LOGIN }}"
#    - name: restore_cache
#      uses: actions/cache@v3.3.1
#      with:
#        key: linux-go-{{ checksum "go.sum" }}-${{ env.cache-key }}
#        restore-keys: linux-go-{{ checksum "go.sum" }}-${{ env.cache-key }}
#    - name: Install goreleaser
#      run: go install github.com/goreleaser/goreleaser@latest
#    - run: goreleaser release
#    - uses: actions/upload-artifact@v3.1.1
#      with:
#        path: dist
#    - uses: actions/upload-artifact@v3.1.1
#      with:
#        path: |-
#          dist/*.rpm
#          dist/*.deb
#  upload:
#    if: # GitHub does not currently support regular expressions inside if conditions
##         (github.ref == 'refs/tags//v[0-9]+(\.[0-9]+)*(-.*)*/') && (github.ref != 'refs/heads//.*/')
#    runs-on: ubuntu-latest
#    container:
#      image: python:3.10
#    needs:
#    - release
#    env:
#      CLOUDSMITH_API_KEY:
#      CLOUDSMITH_USERNAME:
#      DOCKER_LOGIN:
#      DOCKER_PASSWORD:
#    strategy:
#      matrix:
#        arch:
#        - i386
#        - x86_64
#        - arm64
#        format:
#        distro:
#    steps:
#    - uses: actions/download-artifact@v3.0.1
#      with:
#        path: "."
##     # This item has no matching transformer
##     - cloudsmith_cloudsmith_ensure_api_key:
##     # This item has no matching transformer
##     - cloudsmith_cloudsmith_install_cli:
##     # This item has no matching transformer
##     - cloudsmith_cloudsmith_publish:
#  upload_1:
#    if: # GitHub does not currently support regular expressions inside if conditions
##         (github.ref == 'refs/tags//v[0-9]+(\.[0-9]+)*(-.*)*/') && (github.ref != 'refs/heads//.*/')
#    runs-on: ubuntu-latest
#    container:
#      image: python:3.10
#    needs:
#    - release
#    env:
#      CLOUDSMITH_API_KEY:
#      CLOUDSMITH_USERNAME:
#      DOCKER_LOGIN:
#      DOCKER_PASSWORD:
#    strategy:
#      matrix:
#        arch:
#        - i386
#        - amd64
#        - arm64
#        format:
#        distro:
#    steps:
#    - uses: actions/download-artifact@v3.0.1
#      with:
#        path: "."
##     # This item has no matching transformer
##     - cloudsmith_cloudsmith_ensure_api_key:
##     # This item has no matching transformer
##     - cloudsmith_cloudsmith_install_cli:
##     # This item has no matching transformer
##     - cloudsmith_cloudsmith_publish:
