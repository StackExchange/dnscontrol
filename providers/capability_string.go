// Code generated by "stringer -type=Capability"; DO NOT EDIT.

package providers

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CanAutoDNSSEC-0]
	_ = x[CanConcur-1]
	_ = x[CanGetZones-2]
	_ = x[CanUseAKAMAICDN-3]
	_ = x[CanUseAlias-4]
	_ = x[CanUseAzureAlias-5]
	_ = x[CanUseCAA-6]
	_ = x[CanUseDHCID-7]
	_ = x[CanUseDNAME-8]
	_ = x[CanUseDS-9]
	_ = x[CanUseDSForChildren-10]
	_ = x[CanUseHTTPS-11]
	_ = x[CanUseLOC-12]
	_ = x[CanUseNAPTR-13]
	_ = x[CanUsePTR-14]
	_ = x[CanUseRoute53Alias-15]
	_ = x[CanUseSOA-16]
	_ = x[CanUseSRV-17]
	_ = x[CanUseSSHFP-18]
	_ = x[CanUseSVCB-19]
	_ = x[CanUseTLSA-20]
	_ = x[CanUseDNSKEY-21]
	_ = x[DocCreateDomains-22]
	_ = x[DocDualHost-23]
	_ = x[DocOfficiallySupported-24]
}

const _Capability_name = "CanAutoDNSSECCanConcurCanGetZonesCanUseAKAMAICDNCanUseAliasCanUseAzureAliasCanUseCAACanUseDHCIDCanUseDNAMECanUseDSCanUseDSForChildrenCanUseHTTPSCanUseLOCCanUseNAPTRCanUsePTRCanUseRoute53AliasCanUseSOACanUseSRVCanUseSSHFPCanUseSVCBCanUseTLSACanUseDNSKEYDocCreateDomainsDocDualHostDocOfficiallySupported"

var _Capability_index = [...]uint16{0, 13, 22, 33, 48, 59, 75, 84, 95, 106, 114, 133, 144, 153, 164, 173, 191, 200, 209, 220, 230, 240, 252, 268, 279, 301}

func (i Capability) String() string {
	if i >= Capability(len(_Capability_index)-1) {
		return "Capability(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Capability_name[_Capability_index[i]:_Capability_index[i+1]]
}
