{
  "batchPath": "batch",
  "title": "Ad Exchange Buyer API II",
  "ownerName": "Google",
  "resources": {
    "bidders": {
      "resources": {
        "filterSets": {
          "methods": {
            "get": {
              "description": "Retrieves the requested filter set for the account with the given account\nID.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "FilterSet"
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "name": {
                  "description": "Full name of the resource being requested.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                  "required": true,
                  "type": "string",
                  "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}",
              "id": "adexchangebuyer2.bidders.filterSets.get",
              "path": "v2beta1/{+name}"
            },
            "list": {
              "description": "Lists all filter sets for the account with the given account ID.",
              "response": {
                "$ref": "ListFilterSetsResponse"
              },
              "parameterOrder": [
                "ownerName"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                  "format": "int32",
                  "type": "integer"
                },
                "ownerName": {
                  "description": "Name of the owner (bidder or account) of the filter sets to be listed.\nFor example:\n\n- For a bidder-level filter set for bidder 123: `bidders/123`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456`",
                  "required": true,
                  "type": "string",
                  "pattern": "^bidders/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilterSetsResponse.nextPageToken\nreturned from the previous call to the\naccounts.filterSets.list\nmethod.",
                  "type": "string"
                }
              },
              "flatPath": "v2beta1/bidders/{biddersId}/filterSets",
              "path": "v2beta1/{+ownerName}/filterSets",
              "id": "adexchangebuyer2.bidders.filterSets.list"
            },
            "create": {
              "description": "Creates the specified filter set for the account with the given account ID.",
              "request": {
                "$ref": "FilterSet"
              },
              "response": {
                "$ref": "FilterSet"
              },
              "parameterOrder": [
                "ownerName"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "isTransient": {
                  "location": "query",
                  "description": "Whether the filter set is transient, or should be persisted indefinitely.\nBy default, filter sets are not transient.\nIf transient, it will be available for at least 1 hour after creation.",
                  "type": "boolean"
                },
                "ownerName": {
                  "description": "Name of the owner (bidder or account) of the filter set to be created.\nFor example:\n\n- For a bidder-level filter set for bidder 123: `bidders/123`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456`",
                  "required": true,
                  "type": "string",
                  "pattern": "^bidders/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2beta1/bidders/{biddersId}/filterSets",
              "path": "v2beta1/{+ownerName}/filterSets",
              "id": "adexchangebuyer2.bidders.filterSets.create"
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Full name of the resource to delete.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                  "required": true,
                  "type": "string",
                  "pattern": "^bidders/[^/]+/filterSets/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}",
              "id": "adexchangebuyer2.bidders.filterSets.delete",
              "path": "v2beta1/{+name}",
              "description": "Deletes the requested filter set from the account with the given account\nID."
            }
          },
          "resources": {
            "bidResponseErrors": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListBidResponseErrorsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "filterSetName": {
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponseErrorsResponse.nextPageToken\nreturned from the previous call to the bidResponseErrors.list\nmethod.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidResponseErrors",
                  "path": "v2beta1/{+filterSetName}/bidResponseErrors",
                  "id": "adexchangebuyer2.bidders.filterSets.bidResponseErrors.list",
                  "description": "List all errors that occurred in bid responses, with the number of bid\nresponses affected for each reason."
                }
              }
            },
            "bidResponsesWithoutBids": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListBidResponsesWithoutBidsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "filterSetName": {
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponsesWithoutBidsResponse.nextPageToken\nreturned from the previous call to the bidResponsesWithoutBids.list\nmethod.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidResponsesWithoutBids",
                  "path": "v2beta1/{+filterSetName}/bidResponsesWithoutBids",
                  "id": "adexchangebuyer2.bidders.filterSets.bidResponsesWithoutBids.list",
                  "description": "List all reasons for which bid responses were considered to have no\napplicable bids, with the number of bid responses affected for each reason."
                }
              }
            },
            "filteredBidRequests": {
              "methods": {
                "list": {
                  "description": "List all reasons that caused a bid request not to be sent for an\nimpression, with the number of bid requests not sent for each reason.",
                  "response": {
                    "$ref": "ListFilteredBidRequestsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "filterSetName": {
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidRequestsResponse.nextPageToken\nreturned from the previous call to the filteredBidRequests.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBidRequests",
                  "path": "v2beta1/{+filterSetName}/filteredBidRequests",
                  "id": "adexchangebuyer2.bidders.filterSets.filteredBidRequests.list"
                }
              }
            },
            "nonBillableWinningBids": {
              "methods": {
                "list": {
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/nonBillableWinningBids",
                  "path": "v2beta1/{+filterSetName}/nonBillableWinningBids",
                  "id": "adexchangebuyer2.bidders.filterSets.nonBillableWinningBids.list",
                  "description": "List all reasons for which winning bids were not billable, with the number\nof bids not billed for each reason.",
                  "response": {
                    "$ref": "ListNonBillableWinningBidsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "filterSetName": {
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListNonBillableWinningBidsResponse.nextPageToken\nreturned from the previous call to the nonBillableWinningBids.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ]
                }
              }
            },
            "filteredBids": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListFilteredBidsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "filterSetName": {
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidsResponse.nextPageToken\nreturned from the previous call to the filteredBids.list\nmethod.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids",
                  "path": "v2beta1/{+filterSetName}/filteredBids",
                  "id": "adexchangebuyer2.bidders.filterSets.filteredBids.list",
                  "description": "List all reasons for which bids were filtered, with the number of bids\nfiltered for each reason."
                }
              },
              "resources": {
                "creatives": {
                  "methods": {
                    "list": {
                      "description": "List all creatives associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each creative.",
                      "response": {
                        "$ref": "ListCreativeStatusBreakdownByCreativeResponse"
                      },
                      "parameterOrder": [
                        "filterSetName",
                        "creativeStatusId"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/filterSets/[^/]+$"
                        },
                        "creativeStatusId": {
                          "description": "The ID of the creative status for which to retrieve a breakdown by\ncreative.\nSee\n[creative-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/creative-status-codes).",
                          "format": "int32",
                          "required": true,
                          "type": "integer",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByCreativeResponse.nextPageToken\nreturned from the previous call to the filteredBids.creatives.list\nmethod.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/creatives",
                      "path": "v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives",
                      "id": "adexchangebuyer2.bidders.filterSets.filteredBids.creatives.list"
                    }
                  }
                },
                "details": {
                  "methods": {
                    "list": {
                      "description": "List all details associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each detail.",
                      "response": {
                        "$ref": "ListCreativeStatusBreakdownByDetailResponse"
                      },
                      "parameterOrder": [
                        "filterSetName",
                        "creativeStatusId"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "filterSetName": {
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                          "location": "path"
                        },
                        "creativeStatusId": {
                          "location": "path",
                          "description": "The ID of the creative status for which to retrieve a breakdown by detail.\nSee\n[creative-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/creative-status-codes).\nDetails are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.",
                          "format": "int32",
                          "required": true,
                          "type": "integer"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByDetailResponse.nextPageToken\nreturned from the previous call to the filteredBids.details.list\nmethod.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/details",
                      "path": "v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details",
                      "id": "adexchangebuyer2.bidders.filterSets.filteredBids.details.list"
                    }
                  }
                }
              }
            },
            "losingBids": {
              "methods": {
                "list": {
                  "description": "List all reasons for which bids lost in the auction, with the number of\nbids that lost for each reason.",
                  "response": {
                    "$ref": "ListLosingBidsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filterSetName": {
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListLosingBidsResponse.nextPageToken\nreturned from the previous call to the losingBids.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/losingBids",
                  "path": "v2beta1/{+filterSetName}/losingBids",
                  "id": "adexchangebuyer2.bidders.filterSets.losingBids.list"
                }
              }
            },
            "bidMetrics": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListBidMetricsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "filterSetName": {
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidMetricsResponse.nextPageToken\nreturned from the previous call to the bidMetrics.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidMetrics",
                  "path": "v2beta1/{+filterSetName}/bidMetrics",
                  "id": "adexchangebuyer2.bidders.filterSets.bidMetrics.list",
                  "description": "Lists all metrics that are measured in terms of number of bids."
                }
              }
            },
            "impressionMetrics": {
              "methods": {
                "list": {
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/impressionMetrics",
                  "path": "v2beta1/{+filterSetName}/impressionMetrics",
                  "id": "adexchangebuyer2.bidders.filterSets.impressionMetrics.list",
                  "description": "Lists all metrics that are measured in terms of number of impressions.",
                  "response": {
                    "$ref": "ListImpressionMetricsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filterSetName": {
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListImpressionMetricsResponse.nextPageToken\nreturned from the previous call to the impressionMetrics.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    }
                  }
                }
              }
            }
          }
        },
        "accounts": {
          "resources": {
            "filterSets": {
              "methods": {
                "delete": {
                  "description": "Deletes the requested filter set from the account with the given account\nID.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Full name of the resource to delete.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}",
                  "path": "v2beta1/{+name}",
                  "id": "adexchangebuyer2.bidders.accounts.filterSets.delete"
                },
                "get": {
                  "description": "Retrieves the requested filter set for the account with the given account\nID.",
                  "response": {
                    "$ref": "FilterSet"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Full name of the resource being requested.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}",
                  "path": "v2beta1/{+name}",
                  "id": "adexchangebuyer2.bidders.accounts.filterSets.get"
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "ownerName"
                  ],
                  "response": {
                    "$ref": "ListFilterSetsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilterSetsResponse.nextPageToken\nreturned from the previous call to the\naccounts.filterSets.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "ownerName": {
                      "location": "path",
                      "description": "Name of the owner (bidder or account) of the filter sets to be listed.\nFor example:\n\n- For a bidder-level filter set for bidder 123: `bidders/123`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/accounts/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets",
                  "id": "adexchangebuyer2.bidders.accounts.filterSets.list",
                  "path": "v2beta1/{+ownerName}/filterSets",
                  "description": "Lists all filter sets for the account with the given account ID."
                },
                "create": {
                  "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets",
                  "id": "adexchangebuyer2.bidders.accounts.filterSets.create",
                  "path": "v2beta1/{+ownerName}/filterSets",
                  "request": {
                    "$ref": "FilterSet"
                  },
                  "description": "Creates the specified filter set for the account with the given account ID.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "ownerName"
                  ],
                  "response": {
                    "$ref": "FilterSet"
                  },
                  "parameters": {
                    "isTransient": {
                      "location": "query",
                      "description": "Whether the filter set is transient, or should be persisted indefinitely.\nBy default, filter sets are not transient.\nIf transient, it will be available for at least 1 hour after creation.",
                      "type": "boolean"
                    },
                    "ownerName": {
                      "description": "Name of the owner (bidder or account) of the filter set to be created.\nFor example:\n\n- For a bidder-level filter set for bidder 123: `bidders/123`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/accounts/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ]
                }
              },
              "resources": {
                "filteredBids": {
                  "methods": {
                    "list": {
                      "description": "List all reasons for which bids were filtered, with the number of bids\nfiltered for each reason.",
                      "response": {
                        "$ref": "ListFilteredBidsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "filterSetName": {
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidsResponse.nextPageToken\nreturned from the previous call to the filteredBids.list\nmethod.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids",
                      "path": "v2beta1/{+filterSetName}/filteredBids",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.list"
                    }
                  },
                  "resources": {
                    "creatives": {
                      "methods": {
                        "list": {
                          "response": {
                            "$ref": "ListCreativeStatusBreakdownByCreativeResponse"
                          },
                          "parameterOrder": [
                            "filterSetName",
                            "creativeStatusId"
                          ],
                          "httpMethod": "GET",
                          "parameters": {
                            "pageSize": {
                              "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                              "format": "int32",
                              "type": "integer",
                              "location": "query"
                            },
                            "filterSetName": {
                              "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                              "required": true,
                              "type": "string",
                              "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                              "location": "path"
                            },
                            "creativeStatusId": {
                              "description": "The ID of the creative status for which to retrieve a breakdown by\ncreative.\nSee\n[creative-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/creative-status-codes).",
                              "format": "int32",
                              "required": true,
                              "type": "integer",
                              "location": "path"
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByCreativeResponse.nextPageToken\nreturned from the previous call to the filteredBids.creatives.list\nmethod.",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/adexchange.buyer"
                          ],
                          "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/creatives",
                          "path": "v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives",
                          "id": "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.creatives.list",
                          "description": "List all creatives associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each creative."
                        }
                      }
                    },
                    "details": {
                      "methods": {
                        "list": {
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "filterSetName",
                            "creativeStatusId"
                          ],
                          "response": {
                            "$ref": "ListCreativeStatusBreakdownByDetailResponse"
                          },
                          "parameters": {
                            "filterSetName": {
                              "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                              "required": true,
                              "type": "string",
                              "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                              "location": "path"
                            },
                            "creativeStatusId": {
                              "location": "path",
                              "description": "The ID of the creative status for which to retrieve a breakdown by detail.\nSee\n[creative-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/creative-status-codes).\nDetails are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.",
                              "format": "int32",
                              "required": true,
                              "type": "integer"
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByDetailResponse.nextPageToken\nreturned from the previous call to the filteredBids.details.list\nmethod.",
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                              "format": "int32",
                              "type": "integer",
                              "location": "query"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/adexchange.buyer"
                          ],
                          "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/details",
                          "id": "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.details.list",
                          "path": "v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details",
                          "description": "List all details associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each detail."
                        }
                      }
                    }
                  }
                },
                "nonBillableWinningBids": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListNonBillableWinningBidsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "filterSetName": {
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListNonBillableWinningBidsResponse.nextPageToken\nreturned from the previous call to the nonBillableWinningBids.list\nmethod.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/nonBillableWinningBids",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.nonBillableWinningBids.list",
                      "path": "v2beta1/{+filterSetName}/nonBillableWinningBids",
                      "description": "List all reasons for which winning bids were not billable, with the number\nof bids not billed for each reason."
                    }
                  }
                },
                "losingBids": {
                  "methods": {
                    "list": {
                      "description": "List all reasons for which bids lost in the auction, with the number of\nbids that lost for each reason.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "response": {
                        "$ref": "ListLosingBidsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "filterSetName": {
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListLosingBidsResponse.nextPageToken\nreturned from the previous call to the losingBids.list\nmethod.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/losingBids",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.losingBids.list",
                      "path": "v2beta1/{+filterSetName}/losingBids"
                    }
                  }
                },
                "impressionMetrics": {
                  "methods": {
                    "list": {
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/impressionMetrics",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.impressionMetrics.list",
                      "path": "v2beta1/{+filterSetName}/impressionMetrics",
                      "description": "Lists all metrics that are measured in terms of number of impressions.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "response": {
                        "$ref": "ListImpressionMetricsResponse"
                      },
                      "parameters": {
                        "filterSetName": {
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListImpressionMetricsResponse.nextPageToken\nreturned from the previous call to the impressionMetrics.list\nmethod.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ]
                    }
                  }
                },
                "bidMetrics": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListBidMetricsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidMetricsResponse.nextPageToken\nreturned from the previous call to the bidMetrics.list\nmethod.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidMetrics",
                      "path": "v2beta1/{+filterSetName}/bidMetrics",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.bidMetrics.list",
                      "description": "Lists all metrics that are measured in terms of number of bids."
                    }
                  }
                },
                "bidResponseErrors": {
                  "methods": {
                    "list": {
                      "description": "List all errors that occurred in bid responses, with the number of bid\nresponses affected for each reason.",
                      "response": {
                        "$ref": "ListBidResponseErrorsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponseErrorsResponse.nextPageToken\nreturned from the previous call to the bidResponseErrors.list\nmethod.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidResponseErrors",
                      "path": "v2beta1/{+filterSetName}/bidResponseErrors",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.bidResponseErrors.list"
                    }
                  }
                },
                "bidResponsesWithoutBids": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListBidResponsesWithoutBidsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "filterSetName": {
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponsesWithoutBidsResponse.nextPageToken\nreturned from the previous call to the bidResponsesWithoutBids.list\nmethod.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidResponsesWithoutBids",
                      "path": "v2beta1/{+filterSetName}/bidResponsesWithoutBids",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.bidResponsesWithoutBids.list",
                      "description": "List all reasons for which bid responses were considered to have no\napplicable bids, with the number of bid responses affected for each reason."
                    }
                  }
                },
                "filteredBidRequests": {
                  "methods": {
                    "list": {
                      "description": "List all reasons that caused a bid request not to be sent for an\nimpression, with the number of bid requests not sent for each reason.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListFilteredBidRequestsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidRequestsResponse.nextPageToken\nreturned from the previous call to the filteredBidRequests.list\nmethod.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBidRequests",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.filteredBidRequests.list",
                      "path": "v2beta1/{+filterSetName}/filteredBidRequests"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "accounts": {
      "resources": {
        "clients": {
          "methods": {
            "get": {
              "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}",
              "id": "adexchangebuyer2.accounts.clients.get",
              "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}",
              "description": "Gets a client buyer with a given client account ID.",
              "httpMethod": "GET",
              "parameterOrder": [
                "accountId",
                "clientAccountId"
              ],
              "response": {
                "$ref": "Client"
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "description": "Numerical account ID of the client's sponsor buyer. (required)",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "clientAccountId": {
                  "description": "Numerical account ID of the client buyer to retrieve. (required)",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "list": {
              "response": {
                "$ref": "ListClientsResponse"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "description": "Unique numerical account ID of the sponsor buyer to list the clients for.",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "description": "Requested page size. The server may return fewer clients than requested.\nIf unspecified, the server will pick an appropriate default.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListClientsResponse.nextPageToken\nreturned from the previous call to the\naccounts.clients.list method.",
                  "type": "string"
                },
                "partnerClientId": {
                  "description": "Optional unique identifier (from the standpoint of an Ad Exchange sponsor\nbuyer partner) of the client to return.\nIf specified, at most one client will be returned in the response.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/clients",
              "path": "v2beta1/accounts/{accountId}/clients",
              "id": "adexchangebuyer2.accounts.clients.list",
              "description": "Lists all the clients for the current sponsor buyer."
            },
            "update": {
              "request": {
                "$ref": "Client"
              },
              "description": "Updates an existing client buyer.",
              "httpMethod": "PUT",
              "parameterOrder": [
                "accountId",
                "clientAccountId"
              ],
              "response": {
                "$ref": "Client"
              },
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "Unique numerical account ID for the buyer of which the client buyer\nis a customer; the sponsor buyer to update a client for. (required)",
                  "format": "int64",
                  "required": true,
                  "type": "string"
                },
                "clientAccountId": {
                  "description": "Unique numerical account ID of the client to update. (required)",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}",
              "id": "adexchangebuyer2.accounts.clients.update",
              "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}"
            },
            "create": {
              "request": {
                "$ref": "Client"
              },
              "description": "Creates a new client buyer.",
              "httpMethod": "POST",
              "parameterOrder": [
                "accountId"
              ],
              "response": {
                "$ref": "Client"
              },
              "parameters": {
                "accountId": {
                  "description": "Unique numerical account ID for the buyer of which the client buyer\nis a customer; the sponsor buyer to create a client for. (required)",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/clients",
              "id": "adexchangebuyer2.accounts.clients.create",
              "path": "v2beta1/accounts/{accountId}/clients"
            }
          },
          "resources": {
            "users": {
              "methods": {
                "list": {
                  "description": "Lists all the known client users for a specified\nsponsor buyer account ID.",
                  "response": {
                    "$ref": "ListClientUsersResponse"
                  },
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListClientUsersResponse.nextPageToken\nreturned from the previous call to the\naccounts.clients.users.list method.",
                      "type": "string"
                    },
                    "accountId": {
                      "description": "Numerical account ID of the sponsor buyer of the client to list users for.\n(required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer clients than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "clientAccountId": {
                      "location": "path",
                      "description": "The account ID of the client buyer to list users for. (required)\nYou must specify either a string representation of a\nnumerical account identifier or the `-` character\nto list all the client users for all the clients\nof a given sponsor buyer.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users",
                  "id": "adexchangebuyer2.accounts.clients.users.list"
                },
                "get": {
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}",
                  "id": "adexchangebuyer2.accounts.clients.users.get",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}",
                  "description": "Retrieves an existing client user.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId",
                    "userId"
                  ],
                  "response": {
                    "$ref": "ClientUser"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "userId": {
                      "description": "Numerical identifier of the user to retrieve. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "accountId": {
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "clientAccountId": {
                      "description": "Numerical account ID of the client buyer\nthat the user to be retrieved is associated with. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "update": {
                  "request": {
                    "$ref": "ClientUser"
                  },
                  "description": "Updates an existing client user.\nOnly the user status can be changed on update.",
                  "response": {
                    "$ref": "ClientUser"
                  },
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId",
                    "userId"
                  ],
                  "httpMethod": "PUT",
                  "parameters": {
                    "userId": {
                      "description": "Numerical identifier of the user to retrieve. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "accountId": {
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "clientAccountId": {
                      "description": "Numerical account ID of the client buyer that the user to be retrieved\nis associated with. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}",
                  "id": "adexchangebuyer2.accounts.clients.users.update"
                }
              }
            },
            "invitations": {
              "methods": {
                "get": {
                  "description": "Retrieves an existing client user invitation.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ClientUserInvitation"
                  },
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId",
                    "invitationId"
                  ],
                  "parameters": {
                    "invitationId": {
                      "description": "Numerical identifier of the user invitation to retrieve. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "accountId": {
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "clientAccountId": {
                      "location": "path",
                      "description": "Numerical account ID of the client buyer that the user invitation\nto be retrieved is associated with. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}",
                  "id": "adexchangebuyer2.accounts.clients.invitations.get",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}"
                },
                "list": {
                  "description": "Lists all the client users invitations for a client\nwith a given account ID.",
                  "response": {
                    "$ref": "ListClientUserInvitationsResponse"
                  },
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListClientUserInvitationsResponse.nextPageToken\nreturned from the previous call to the\nclients.invitations.list\nmethod.",
                      "type": "string"
                    },
                    "accountId": {
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer clients than requested.\nIf unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "clientAccountId": {
                      "description": "Numerical account ID of the client buyer to list invitations for.\n(required)\nYou must either specify a string representation of a\nnumerical account identifier or the `-` character\nto list all the invitations for all the clients\nof a given sponsor buyer.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations",
                  "id": "adexchangebuyer2.accounts.clients.invitations.list"
                },
                "create": {
                  "description": "Creates and sends out an email invitation to access\nan Ad Exchange client buyer account.",
                  "request": {
                    "$ref": "ClientUserInvitation"
                  },
                  "response": {
                    "$ref": "ClientUserInvitation"
                  },
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "accountId": {
                      "location": "path",
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string"
                    },
                    "clientAccountId": {
                      "location": "path",
                      "description": "Numerical account ID of the client buyer that the user\nshould be associated with. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations",
                  "id": "adexchangebuyer2.accounts.clients.invitations.create"
                }
              }
            }
          }
        },
        "creatives": {
          "methods": {
            "list": {
              "description": "Lists creatives.",
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "description": "The account to list the creatives from.\nSpecify \"-\" to list all creatives the current user has access to.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Requested page size. The server may return fewer creatives than requested\n(due to timeout constraint) even if more are available via another call.\nIf unspecified, server will pick an appropriate default.\nAcceptable values are 1 to 1000, inclusive.",
                  "format": "int32",
                  "type": "integer"
                },
                "query": {
                  "description": "An optional query string to filter creatives. If no filter is specified,\nall active creatives will be returned.\nSupported queries are:\n\u003cul\u003e\n\u003cli\u003eaccountId=\u003ci\u003eaccount_id_string\u003c/i\u003e\n\u003cli\u003ecreativeId=\u003ci\u003ecreative_id_string\u003c/i\u003e\n\u003cli\u003edealsStatus: {approved, conditionally_approved, disapproved,\n                   not_checked}\n\u003cli\u003eopenAuctionStatus: {approved, conditionally_approved, disapproved,\n                          not_checked}\n\u003cli\u003eattribute: {a numeric attribute from the list of attributes}\n\u003cli\u003edisapprovalReason: {a reason from\nDisapprovalReason}\n\u003c/ul\u003e\nExample: 'accountId=12345 AND (dealsStatus:disapproved AND\ndisapprovalReason:unacceptable_content) OR attribute:47'",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativesResponse.next_page_token\nreturned from the previous call to 'ListCreatives' method.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/creatives",
              "path": "v2beta1/accounts/{accountId}/creatives",
              "id": "adexchangebuyer2.accounts.creatives.list"
            },
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "accountId"
              ],
              "response": {
                "$ref": "Creative"
              },
              "parameters": {
                "accountId": {
                  "description": "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "accountId1": {
                  "description": "The account the creative belongs to.",
                  "type": "string",
                  "location": "query"
                },
                "duplicateIdMode": {
                  "description": "Indicates if multiple creatives can share an ID or not. Default is\nNO_DUPLICATES (one ID per creative).",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "NO_DUPLICATES",
                    "FORCE_ENABLE_DUPLICATE_IDS"
                  ]
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/creatives",
              "id": "adexchangebuyer2.accounts.creatives.create",
              "path": "v2beta1/accounts/{accountId}/creatives",
              "request": {
                "$ref": "Creative"
              },
              "description": "Creates a creative."
            },
            "stopWatching": {
              "request": {
                "$ref": "StopWatchingCreativeRequest"
              },
              "description": "Stops watching a creative. Will stop push notifications being sent to the\ntopics when the creative changes status.",
              "httpMethod": "POST",
              "parameterOrder": [
                "accountId",
                "creativeId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "The account of the creative to stop notifications for.",
                  "required": true,
                  "type": "string"
                },
                "creativeId": {
                  "description": "The creative ID of the creative to stop notifications for.\nSpecify \"-\" to specify stopping account level notifications.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching",
              "id": "adexchangebuyer2.accounts.creatives.stopWatching",
              "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching"
            },
            "get": {
              "response": {
                "$ref": "Creative"
              },
              "parameterOrder": [
                "accountId",
                "creativeId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "The account the creative belongs to.",
                  "required": true,
                  "type": "string"
                },
                "creativeId": {
                  "description": "The ID of the creative to retrieve.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}",
              "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}",
              "id": "adexchangebuyer2.accounts.creatives.get",
              "description": "Gets a creative."
            },
            "watch": {
              "request": {
                "$ref": "WatchCreativeRequest"
              },
              "description": "Watches a creative. Will result in push notifications being sent to the\ntopic when the creative changes status.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "accountId",
                "creativeId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "accountId": {
                  "description": "The account of the creative to watch.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "creativeId": {
                  "description": "The creative ID to watch for status changes.\nSpecify \"-\" to watch all creatives under the above account.\nIf both creative-level and account-level notifications are\nsent, only a single notification will be sent to the\ncreative-level notification topic.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}:watch",
              "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}:watch",
              "id": "adexchangebuyer2.accounts.creatives.watch"
            },
            "update": {
              "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}",
              "id": "adexchangebuyer2.accounts.creatives.update",
              "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}",
              "request": {
                "$ref": "Creative"
              },
              "description": "Updates a creative.",
              "httpMethod": "PUT",
              "parameterOrder": [
                "accountId",
                "creativeId"
              ],
              "response": {
                "$ref": "Creative"
              },
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
                  "required": true,
                  "type": "string"
                },
                "creativeId": {
                  "location": "path",
                  "description": "The buyer-defined creative ID of this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
                  "required": true,
                  "type": "string"
                },
                "accountId1": {
                  "description": "The account the creative belongs to.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ]
            }
          },
          "resources": {
            "dealAssociations": {
              "methods": {
                "list": {
                  "description": "List all creative-deal associations.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListDealAssociationsResponse"
                  },
                  "parameterOrder": [
                    "accountId",
                    "creativeId"
                  ],
                  "parameters": {
                    "accountId": {
                      "location": "path",
                      "description": "The account to list the associations from.\nSpecify \"-\" to list all creatives the current user has access to.",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer associations than requested.\nIf unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "query": {
                      "description": "An optional query string to filter deal associations. If no filter is\nspecified, all associations will be returned.\nSupported queries are:\n\u003cul\u003e\n\u003cli\u003eaccountId=\u003ci\u003eaccount_id_string\u003c/i\u003e\n\u003cli\u003ecreativeId=\u003ci\u003ecreative_id_string\u003c/i\u003e\n\u003cli\u003edealsId=\u003ci\u003edeals_id_string\u003c/i\u003e\n\u003cli\u003edealsStatus:{approved, conditionally_approved, disapproved,\n                  not_checked}\n\u003cli\u003eopenAuctionStatus:{approved, conditionally_approved, disapproved,\n                         not_checked}\n\u003c/ul\u003e\nExample: 'dealsId=12345 AND dealsStatus:disapproved'",
                      "type": "string",
                      "location": "query"
                    },
                    "creativeId": {
                      "description": "The creative ID to list the associations from.\nSpecify \"-\" to list all creatives under the above account.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListDealAssociationsResponse.next_page_token\nreturned from the previous call to 'ListDealAssociations' method.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations",
                  "id": "adexchangebuyer2.accounts.creatives.dealAssociations.list",
                  "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations"
                },
                "add": {
                  "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add",
                  "id": "adexchangebuyer2.accounts.creatives.dealAssociations.add",
                  "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add",
                  "request": {
                    "$ref": "AddDealAssociationRequest"
                  },
                  "description": "Associate an existing deal with a creative.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "accountId",
                    "creativeId"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "accountId": {
                      "description": "The account the creative belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "creativeId": {
                      "location": "path",
                      "description": "The ID of the creative associated with the deal.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ]
                },
                "remove": {
                  "request": {
                    "$ref": "RemoveDealAssociationRequest"
                  },
                  "description": "Remove the association between a deal and a creative.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "accountId",
                    "creativeId"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "accountId": {
                      "location": "path",
                      "description": "The account the creative belongs to.",
                      "required": true,
                      "type": "string"
                    },
                    "creativeId": {
                      "description": "The ID of the creative associated with the deal.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove",
                  "id": "adexchangebuyer2.accounts.creatives.dealAssociations.remove",
                  "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove"
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "pp": {
      "location": "query",
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "bearer_token": {
      "location": "query",
      "description": "OAuth bearer token.",
      "type": "string"
    }
  },
  "version": "v2beta1",
  "baseUrl": "https://adexchangebuyer.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Accesses the latest features for managing Ad Exchange accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.",
  "servicePath": "",
  "basePath": "",
  "revision": "20180111",
  "documentationLink": "https://developers.google.com/ad-exchange/buyer-rest/reference/rest/",
  "id": "adexchangebuyer2:v2beta1",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "ListBidResponseErrorsResponse": {
      "description": "Response message for listing all reasons that bid responses resulted in an\nerror.",
      "type": "object",
      "properties": {
        "calloutStatusRows": {
          "description": "List of rows, with counts of bid responses aggregated by callout status.",
          "type": "array",
          "items": {
            "$ref": "CalloutStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListBidResponseErrorsRequest.pageToken\nfield in the subsequent call to the bidResponseErrors.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListBidResponseErrorsResponse"
    },
    "CreativeStatusRow": {
      "description": "The number of bids with the specified dimension values that did not win the\nauction (either were filtered pre-auction or lost the auction), as described\nby the specified creative status.",
      "type": "object",
      "properties": {
        "bidCount": {
          "$ref": "MetricValue",
          "description": "The number of bids with the specified status."
        },
        "rowDimensions": {
          "$ref": "RowDimensions",
          "description": "The values of all dimensions associated with metric values in this row."
        },
        "creativeStatusId": {
          "description": "The ID of the creative status.\nSee [creative-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/creative-status-codes).",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "CreativeStatusRow"
    },
    "RealtimeTimeRange": {
      "description": "An open-ended realtime time range specified by the start timestamp.\nFor filter sets that specify a realtime time range RTB metrics continue to\nbe aggregated throughout the lifetime of the filter set.",
      "type": "object",
      "properties": {
        "startTimestamp": {
          "description": "The start timestamp of the real-time RTB metrics aggregation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "RealtimeTimeRange"
    },
    "NonBillableWinningBidStatusRow": {
      "description": "The number of winning bids with the specified dimension values for which the\nbuyer was not billed, as described by the specified status.",
      "type": "object",
      "properties": {
        "bidCount": {
          "$ref": "MetricValue",
          "description": "The number of bids with the specified status."
        },
        "status": {
          "enumDescriptions": [
            "A placeholder for an undefined status.\nThis value will never be returned in responses.",
            "The buyer was not billed because the ad was not rendered by the\npublisher.",
            "The buyer was not billed because the impression won by the bid was\ndetermined to be invalid."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "AD_NOT_RENDERED",
            "INVALID_IMPRESSION"
          ],
          "description": "The status specifying why the winning bids were not billed.",
          "type": "string"
        },
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        }
      },
      "id": "NonBillableWinningBidStatusRow"
    },
    "FilteredBidDetailRow": {
      "description": "The number of filtered bids with the specified dimension values, among those\nfiltered due to the requested filtering reason (i.e. creative status), that\nhave the specified detail.",
      "type": "object",
      "properties": {
        "bidCount": {
          "$ref": "MetricValue",
          "description": "The number of bids with the specified detail."
        },
        "detailId": {
          "description": "The ID of the detail. The associated value can be looked up in the\ndictionary file corresponding to the DetailType in the response message.",
          "format": "int32",
          "type": "integer"
        },
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        }
      },
      "id": "FilteredBidDetailRow"
    },
    "AbsoluteDateRange": {
      "description": "An absolute date range, specified by its start date and end date.\nThe supported range of dates begins 30 days before today and ends today.\nValidity checked upon filter set creation. If a filter set with an absolute\ndate range is run at a later date more than 30 days after start_date, it will\nfail.",
      "type": "object",
      "properties": {
        "endDate": {
          "description": "The end date of the range (inclusive).\nMust be within the 30 days leading up to current date, and must be equal to\nor after start_date.",
          "$ref": "Date"
        },
        "startDate": {
          "$ref": "Date",
          "description": "The start date of the range (inclusive).\nMust be within the 30 days leading up to current date, and must be equal to\nor before end_date."
        }
      },
      "id": "AbsoluteDateRange"
    },
    "AddDealAssociationRequest": {
      "description": "A request for associating a deal and a creative.",
      "type": "object",
      "properties": {
        "association": {
          "description": "The association between a creative and a deal that should be added.",
          "$ref": "CreativeDealAssociation"
        }
      },
      "id": "AddDealAssociationRequest"
    },
    "WatchCreativeRequest": {
      "description": "A request for watching changes to creative Status.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "The Pub/Sub topic to publish notifications to.\nThis topic must already exist and must give permission to\nad-exchange-buyside-reports@google.com to write to the topic.\nThis should be the full resource name in\n\"projects/{project_id}/topics/{topic_id}\" format.",
          "type": "string"
        }
      },
      "id": "WatchCreativeRequest"
    },
    "TimeInterval": {
      "description": "An interval of time, with an absolute start and end.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The timestamp marking the end of the range (exclusive) for which data is\nincluded.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "The timestamp marking the start of the range (inclusive) for which data is\nincluded.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "TimeInterval"
    },
    "FilteredBidCreativeRow": {
      "description": "The number of filtered bids with the specified dimension values that have the\nspecified creative.",
      "type": "object",
      "properties": {
        "bidCount": {
          "$ref": "MetricValue",
          "description": "The number of bids with the specified creative."
        },
        "creativeId": {
          "description": "The ID of the creative.",
          "type": "string"
        },
        "rowDimensions": {
          "$ref": "RowDimensions",
          "description": "The values of all dimensions associated with metric values in this row."
        }
      },
      "id": "FilteredBidCreativeRow"
    },
    "RelativeDateRange": {
      "description": "A relative date range, specified by an offset and a duration.\nThe supported range of dates begins 30 days before today and ends today.\nI.e. the limits for these values are:\noffset_days \u003e= 0\nduration_days \u003e= 1\noffset_days + duration_days \u003c= 30",
      "type": "object",
      "properties": {
        "durationDays": {
          "description": "The number of days in the requested date range. E.g. for a range spanning\ntoday, 1. For a range spanning the last 7 days, 7.",
          "format": "int32",
          "type": "integer"
        },
        "offsetDays": {
          "description": "The end date of the filter set, specified as the number of days before\ntoday. E.g. for a range where the last date is today, 0.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "RelativeDateRange"
    },
    "NativeContent": {
      "description": "Native content for a creative.",
      "type": "object",
      "properties": {
        "advertiserName": {
          "description": "The name of the advertiser or sponsor, to be displayed in the ad creative.",
          "type": "string"
        },
        "storeUrl": {
          "description": "The URL to the app store to purchase/download the promoted app.",
          "type": "string"
        },
        "headline": {
          "description": "A short title for the ad.",
          "type": "string"
        },
        "appIcon": {
          "$ref": "Image",
          "description": "The app icon, for app download ads."
        },
        "callToAction": {
          "description": "A label for the button that the user is supposed to click.",
          "type": "string"
        },
        "body": {
          "description": "A long description of the ad.",
          "type": "string"
        },
        "starRating": {
          "description": "The app rating in the app store. Must be in the range [0-5].",
          "format": "double",
          "type": "number"
        },
        "videoUrl": {
          "description": "The URL to fetch a native video ad.",
          "type": "string"
        },
        "logo": {
          "description": "A smaller image, for the advertiser's logo.",
          "$ref": "Image"
        },
        "clickLinkUrl": {
          "description": "The URL that the browser/SDK will load when the user clicks the ad.",
          "type": "string"
        },
        "priceDisplayText": {
          "description": "The price of the promoted app including currency info.",
          "type": "string"
        },
        "image": {
          "description": "A large image.",
          "$ref": "Image"
        },
        "clickTrackingUrl": {
          "description": "The URL to use for click tracking.",
          "type": "string"
        }
      },
      "id": "NativeContent"
    },
    "ListClientsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListClientsRequest.pageToken\nfield in the subsequent call to the\naccounts.clients.list method\nto retrieve the next page of results.",
          "type": "string"
        },
        "clients": {
          "description": "The returned list of clients.",
          "type": "array",
          "items": {
            "$ref": "Client"
          }
        }
      },
      "id": "ListClientsResponse"
    },
    "ListBidResponsesWithoutBidsResponse": {
      "description": "Response message for listing all reasons that bid responses were considered\nto have no applicable bids.",
      "type": "object",
      "properties": {
        "bidResponseWithoutBidsStatusRows": {
          "description": "List of rows, with counts of bid responses without bids aggregated by\nstatus.",
          "type": "array",
          "items": {
            "$ref": "BidResponseWithoutBidsStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListBidResponsesWithoutBidsRequest.pageToken\nfield in the subsequent call to the bidResponsesWithoutBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListBidResponsesWithoutBidsResponse"
    },
    "ServingContext": {
      "description": "The serving context for this restriction.",
      "type": "object",
      "properties": {
        "all": {
          "enumDescriptions": [
            "A simple context."
          ],
          "enum": [
            "SIMPLE_CONTEXT"
          ],
          "description": "Matches all contexts.",
          "type": "string"
        },
        "appType": {
          "description": "Matches impressions for a particular app type.",
          "$ref": "AppContext"
        },
        "securityType": {
          "description": "Matches impressions for a particular security type.",
          "$ref": "SecurityContext"
        },
        "platform": {
          "$ref": "PlatformContext",
          "description": "Matches impressions coming from a particular platform."
        },
        "location": {
          "$ref": "LocationContext",
          "description": "Matches impressions coming from users *or* publishers in a specific\nlocation."
        },
        "auctionType": {
          "description": "Matches impressions for a particular auction type.",
          "$ref": "AuctionContext"
        }
      },
      "id": "ServingContext"
    },
    "Image": {
      "description": "An image resource. You may provide a larger image than was requested,\nso long as the aspect ratio is preserved.",
      "type": "object",
      "properties": {
        "width": {
          "description": "Image width in pixels.",
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "description": "The URL of the image.",
          "type": "string"
        },
        "height": {
          "description": "Image height in pixels.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Image"
    },
    "ListFilterSetsResponse": {
      "description": "Response message for listing filter sets.",
      "type": "object",
      "properties": {
        "filterSets": {
          "description": "The filter sets belonging to the buyer.",
          "type": "array",
          "items": {
            "$ref": "FilterSet"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListFilterSetsRequest.pageToken\nfield in the subsequent call to the\naccounts.filterSets.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListFilterSetsResponse"
    },
    "BidResponseWithoutBidsStatusRow": {
      "description": "The number of impressions with the specified dimension values that were\nconsidered to have no applicable bids, as described by the specified status.",
      "type": "object",
      "properties": {
        "impressionCount": {
          "description": "The number of impressions for which there was a bid response with the\nspecified status.",
          "$ref": "MetricValue"
        },
        "status": {
          "enumDescriptions": [
            "A placeholder for an undefined status.\nThis value will never be returned in responses.",
            "The response had no bids.",
            "The response had no bids for the specified account, though it may have\nincluded bids on behalf of other accounts.",
            "The response had no bids for the specified deal, though it may have\nincluded bids on other deals on behalf of the account to which the deal\nbelongs."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "RESPONSES_WITHOUT_BIDS",
            "RESPONSES_WITHOUT_BIDS_FOR_ACCOUNT",
            "RESPONSES_WITHOUT_BIDS_FOR_DEAL"
          ],
          "description": "The status specifying why the bid responses were considered to have no\napplicable bids.",
          "type": "string"
        },
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        }
      },
      "id": "BidResponseWithoutBidsStatusRow"
    },
    "ClientUserInvitation": {
      "description": "An invitation for a new client user to get access to the Ad Exchange\nBuyer UI.\nAll fields are required unless otherwise specified.",
      "type": "object",
      "properties": {
        "clientAccountId": {
          "description": "Numerical account ID of the client buyer\nthat the invited user is associated with.\nThe value of this field is ignored in create operations.",
          "format": "int64",
          "type": "string"
        },
        "invitationId": {
          "description": "The unique numerical ID of the invitation that is sent to the user.\nThe value of this field is ignored in create operations.",
          "format": "int64",
          "type": "string"
        },
        "email": {
          "description": "The email address to which the invitation is sent. Email\naddresses should be unique among all client users under each sponsor\nbuyer.",
          "type": "string"
        }
      },
      "id": "ClientUserInvitation"
    },
    "ListCreativeStatusBreakdownByDetailResponse": {
      "description": "Response message for listing all details associated with a given filtered bid\nreason.",
      "type": "object",
      "properties": {
        "detailType": {
          "enumDescriptions": [
            "A placeholder for an undefined status.\nThis value will never be returned in responses.",
            "Indicates that the detail ID refers to a creative attribute; see\n[publisher-excludable-creative-attributes](https://developers.google.com/ad-exchange/rtb/downloads/publisher-excludable-creative-attributes).",
            "Indicates that the detail ID refers to a vendor; see\n[vendors](https://developers.google.com/ad-exchange/rtb/downloads/vendors).",
            "Indicates that the detail ID refers to a sensitive category; see\n[ad-sensitive-categories](https://developers.google.com/ad-exchange/rtb/downloads/ad-sensitive-categories).",
            "Indicates that the detail ID refers to a product category; see\n[ad-product-categories](https://developers.google.com/ad-exchange/rtb/downloads/ad-product-categories).",
            "Indicates that the detail ID refers to a disapproval reason; see\nDisapprovalReason enum in [snippet-status-report-proto](https://developers.google.com/ad-exchange/rtb/downloads/snippet-status-report-proto)."
          ],
          "enum": [
            "DETAIL_TYPE_UNSPECIFIED",
            "CREATIVE_ATTRIBUTE",
            "VENDOR",
            "SENSITIVE_CATEGORY",
            "PRODUCT_CATEGORY",
            "DISAPPROVAL_REASON"
          ],
          "description": "The type of detail that the detail IDs represent.",
          "type": "string"
        },
        "filteredBidDetailRows": {
          "description": "List of rows, with counts of bids with a given creative status aggregated\nby detail.",
          "type": "array",
          "items": {
            "$ref": "FilteredBidDetailRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListCreativeStatusBreakdownByDetailRequest.pageToken\nfield in the subsequent call to the filteredBids.details.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListCreativeStatusBreakdownByDetailResponse"
    },
    "ListClientUsersResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListClientUsersRequest.pageToken\nfield in the subsequent call to the\nclients.invitations.list\nmethod to retrieve the next\npage of results.",
          "type": "string"
        },
        "users": {
          "description": "The returned list of client users.",
          "type": "array",
          "items": {
            "$ref": "ClientUser"
          }
        }
      },
      "id": "ListClientUsersResponse"
    },
    "ListClientUserInvitationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListClientUserInvitationsRequest.pageToken\nfield in the subsequent call to the\nclients.invitations.list\nmethod to retrieve the next\npage of results.",
          "type": "string"
        },
        "invitations": {
          "description": "The returned list of client users.",
          "type": "array",
          "items": {
            "$ref": "ClientUserInvitation"
          }
        }
      },
      "id": "ListClientUserInvitationsResponse"
    },
    "LocationContext": {
      "description": "@OutputOnly The Geo criteria the restriction applies to.",
      "type": "object",
      "properties": {
        "geoCriteriaIds": {
          "description": "IDs representing the geo location for this context.\nPlease refer to the\n[geo-table.csv](https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv)\nfile for different geo criteria IDs.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "id": "LocationContext"
    },
    "PlatformContext": {
      "description": "@OutputOnly The type of platform the restriction applies to.",
      "type": "object",
      "properties": {
        "platforms": {
          "enumDescriptions": [
            "Desktop platform.",
            "Android platform.",
            "iOS platform."
          ],
          "description": "The platforms this restriction applies to.",
          "type": "array",
          "items": {
            "enum": [
              "DESKTOP",
              "ANDROID",
              "IOS"
            ],
            "type": "string"
          }
        }
      },
      "id": "PlatformContext"
    },
    "MetricValue": {
      "description": "A metric value, with an expected value and a variance; represents a count\nthat may be either exact or estimated (i.e. when sampled).",
      "type": "object",
      "properties": {
        "variance": {
          "description": "The variance (i.e. square of the standard deviation) of the metric value.\nIf value is exact, variance is 0.\nCan be used to calculate margin of error as a percentage of value, using\nthe following formula, where Z is the standard constant that depends on the\ndesired size of the confidence interval (e.g. for 90% confidence interval,\nuse Z = 1.645):\n\n  marginOfError = 100 * Z * sqrt(variance) / value",
          "format": "int64",
          "type": "string"
        },
        "value": {
          "description": "The expected value of the metric.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "MetricValue"
    },
    "ClientUser": {
      "description": "A client user is created under a client buyer and has restricted access to\nthe Ad Exchange Marketplace and certain other sections\nof the Ad Exchange Buyer UI based on the role\ngranted to the associated client buyer.\n\nThe only way a new client user can be created is via accepting an\nemail invitation\n(see the\naccounts.clients.invitations.create\nmethod).\n\nAll fields are required unless otherwise specified.",
      "type": "object",
      "properties": {
        "clientAccountId": {
          "description": "Numerical account ID of the client buyer\nwith which the user is associated; the\nbuyer must be a client of the current sponsor buyer.\nThe value of this field is ignored in an update operation.",
          "format": "int64",
          "type": "string"
        },
        "status": {
          "description": "The status of the client user.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined user status.",
            "A user who was already created but hasn't accepted the invitation yet.",
            "A user that is currently active.",
            "A user that is currently disabled."
          ],
          "enum": [
            "USER_STATUS_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "DISABLED"
          ]
        },
        "userId": {
          "description": "The unique numerical ID of the client user\nthat has accepted an invitation.\nThe value of this field is ignored in an update operation.",
          "format": "int64",
          "type": "string"
        },
        "email": {
          "description": "User's email address. The value of this field\nis ignored in an update operation.",
          "type": "string"
        }
      },
      "id": "ClientUser"
    },
    "CreativeDealAssociation": {
      "description": "The association between a creative and a deal.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account the creative belongs to.",
          "type": "string"
        },
        "creativeId": {
          "description": "The ID of the creative associated with the deal.",
          "type": "string"
        },
        "dealsId": {
          "description": "The externalDealId for the deal associated with the creative.",
          "type": "string"
        }
      },
      "id": "CreativeDealAssociation"
    },
    "Creative": {
      "description": "A creative and its classification data.",
      "type": "object",
      "properties": {
        "html": {
          "description": "An HTML creative.",
          "$ref": "HtmlContent"
        },
        "dealsStatus": {
          "enumDescriptions": [
            "The status is unknown.",
            "The creative has not been checked.",
            "The creative has been conditionally approved.\nSee serving_restrictions for details.",
            "The creative has been approved.",
            "The creative has been disapproved."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "NOT_CHECKED",
            "CONDITIONALLY_APPROVED",
            "APPROVED",
            "DISAPPROVED"
          ],
          "description": "@OutputOnly The top-level deals status of this creative.\nIf disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in\nserving_restrictions will also exist. Note\nthat this may be nuanced with other contextual restrictions, in which case,\nit may be preferable to read from serving_restrictions directly.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string"
        },
        "detectedProductCategories": {
          "description": "@OutputOnly Detected product categories, if any.\nSee the ad-product-categories.txt file in the technical documentation\nfor a list of IDs.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "openAuctionStatus": {
          "description": "@OutputOnly The top-level open auction status of this creative.\nIf disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in\nserving_restrictions will also exist. Note\nthat this may be nuanced with other contextual restrictions, in which case,\nit may be preferable to read from serving_restrictions directly.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string",
          "enumDescriptions": [
            "The status is unknown.",
            "The creative has not been checked.",
            "The creative has been conditionally approved.\nSee serving_restrictions for details.",
            "The creative has been approved.",
            "The creative has been disapproved."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "NOT_CHECKED",
            "CONDITIONALLY_APPROVED",
            "APPROVED",
            "DISAPPROVED"
          ]
        },
        "advertiserName": {
          "description": "The name of the company being advertised in the creative.",
          "type": "string"
        },
        "detectedAdvertiserIds": {
          "description": "@OutputOnly Detected advertiser IDs, if any.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "detectedDomains": {
          "description": "@OutputOnly\nThe detected domains for this creative.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filteringStats": {
          "description": "@OutputOnly The filtering stats for this creative.",
          "$ref": "FilteringStats"
        },
        "attributes": {
          "enumDescriptions": [
            "Do not use. This is a placeholder value only.",
            "The creative is tagged.",
            "The creative is cookie targeted.",
            "The creative is user interest targeted.",
            "The creative does not expand.",
            "The creative expands up.",
            "The creative expands down.",
            "The creative expands left.",
            "The creative expands right.",
            "The creative expands up and left.",
            "The creative expands up and right.",
            "The creative expands down and left.",
            "The creative expands down and right.",
            "The creative expands up or down.",
            "The creative expands left or right.",
            "The creative expands on any diagonal.",
            "The creative expands when rolled over.",
            "The instream vast video type is vpaid flash.",
            "The creative is MRAID",
            "The creative is SSL.",
            "The creative is an interstitial.",
            "The creative is eligible for native.",
            "The creative is not eligible for native.",
            "The creative can dynamically resize to fill a variety of slot sizes."
          ],
          "description": "All attributes for the ads that may be shown from this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "array",
          "items": {
            "enum": [
              "ATTRIBUTE_UNSPECIFIED",
              "IS_TAGGED",
              "IS_COOKIE_TARGETED",
              "IS_USER_INTEREST_TARGETED",
              "EXPANDING_DIRECTION_NONE",
              "EXPANDING_DIRECTION_UP",
              "EXPANDING_DIRECTION_DOWN",
              "EXPANDING_DIRECTION_LEFT",
              "EXPANDING_DIRECTION_RIGHT",
              "EXPANDING_DIRECTION_UP_LEFT",
              "EXPANDING_DIRECTION_UP_RIGHT",
              "EXPANDING_DIRECTION_DOWN_LEFT",
              "EXPANDING_DIRECTION_DOWN_RIGHT",
              "EXPANDING_DIRECTION_UP_OR_DOWN",
              "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
              "EXPANDING_DIRECTION_ANY_DIAGONAL",
              "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
              "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
              "RICH_MEDIA_CAPABILITY_TYPE_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
              "NATIVE_ELIGIBILITY_ELIGIBLE",
              "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
              "RENDERING_SIZELESS_ADX"
            ],
            "type": "string"
          }
        },
        "apiUpdateTime": {
          "description": "@OutputOnly The last update timestamp of the creative via API.",
          "format": "google-datetime",
          "type": "string"
        },
        "detectedLanguages": {
          "description": "@OutputOnly\nThe detected languages for this creative. The order is arbitrary. The codes\nare 2 or 5 characters and are documented at\nhttps://developers.google.com/adwords/api/docs/appendix/languagecodes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creativeId": {
          "description": "The buyer-defined creative ID of this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string"
        },
        "accountId": {
          "description": "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string"
        },
        "native": {
          "description": "A native creative.",
          "$ref": "NativeContent"
        },
        "servingRestrictions": {
          "description": "@OutputOnly The granular status of this ad in specific contexts.\nA context here relates to where something ultimately serves (for example,\na physical location, a platform, an HTTPS vs HTTP request, or the type\nof auction).",
          "type": "array",
          "items": {
            "$ref": "ServingRestriction"
          }
        },
        "video": {
          "$ref": "VideoContent",
          "description": "A video creative."
        },
        "agencyId": {
          "description": "The agency ID for this creative.",
          "format": "int64",
          "type": "string"
        },
        "clickThroughUrls": {
          "description": "The set of destination URLs for the creative.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "adChoicesDestinationUrl": {
          "description": "The link to AdChoices destination page.",
          "type": "string"
        },
        "detectedSensitiveCategories": {
          "description": "@OutputOnly Detected sensitive categories, if any.\nSee the ad-sensitive-categories.txt file in the technical documentation for\na list of IDs. You should use these IDs along with the\nexcluded-sensitive-category field in the bid request to filter your bids.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "restrictedCategories": {
          "description": "All restricted categories for the ads that may be shown from this creative.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NO_RESTRICTED_CATEGORIES",
              "ALCOHOL"
            ]
          },
          "enumDescriptions": [
            "The ad has no restricted categories",
            "The alcohol restricted category."
          ]
        },
        "corrections": {
          "description": "@OutputOnly Shows any corrections that were applied to this creative.",
          "type": "array",
          "items": {
            "$ref": "Correction"
          }
        },
        "version": {
          "description": "@OutputOnly The version of this creative.",
          "format": "int32",
          "type": "integer"
        },
        "vendorIds": {
          "description": "All vendor IDs for the ads that may be shown from this creative.\nSee https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt\nfor possible values.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "impressionTrackingUrls": {
          "description": "The set of URLs to be called to record an impression.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Creative"
    },
    "FilteringStats": {
      "description": "@OutputOnly Filtering reasons for this creative during a period of a single\nday (from midnight to midnight Pacific).",
      "type": "object",
      "properties": {
        "reasons": {
          "description": "The set of filtering reasons for this date.",
          "type": "array",
          "items": {
            "$ref": "Reason"
          }
        },
        "date": {
          "description": "The day during which the data was collected.\nThe data is collected from 00:00:00 to 23:59:59 PT.\nDuring switches from PST to PDT and back, the day may\ncontain 23 or 25 hours of data instead of the usual 24.",
          "$ref": "Date"
        }
      },
      "id": "FilteringStats"
    },
    "RemoveDealAssociationRequest": {
      "description": "A request for removing the association between a deal and a creative.",
      "type": "object",
      "properties": {
        "association": {
          "$ref": "CreativeDealAssociation",
          "description": "The association between a creative and a deal that should be removed."
        }
      },
      "id": "RemoveDealAssociationRequest"
    },
    "Client": {
      "description": "A client resource represents a client buyer&mdash;an agency,\na brand, or an advertiser customer of the sponsor buyer.\nUsers associated with the client buyer have restricted access to\nthe Ad Exchange Marketplace and certain other sections\nof the Ad Exchange Buyer UI based on the role\ngranted to the client buyer.\nAll fields are required unless otherwise specified.",
      "type": "object",
      "properties": {
        "clientName": {
          "description": "Name used to represent this client to publishers.\nYou may have multiple clients that map to the same entity,\nbut for each client the combination of `clientName` and entity\nmust be unique.\nYou can specify this field as empty.",
          "type": "string"
        },
        "role": {
          "description": "The role which is assigned to the client buyer. Each role implies a set of\npermissions granted to the client. Must be one of `CLIENT_DEAL_VIEWER`,\n`CLIENT_DEAL_NEGOTIATOR` or `CLIENT_DEAL_APPROVER`.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined client role.",
            "Users associated with this client can see publisher deal offers\nin the Marketplace.\nThey can neither negotiate proposals nor approve deals.\nIf this client is visible to publishers, they can send deal proposals\nto this client.",
            "Users associated with this client can respond to deal proposals\nsent to them by publishers. They can also initiate deal proposals\nof their own.",
            "Users associated with this client can approve eligible deals\non your behalf. Some deals may still explicitly require publisher\nfinalization. If this role is not selected, the sponsor buyer\nwill need to manually approve each of their deals."
          ],
          "enum": [
            "CLIENT_ROLE_UNSPECIFIED",
            "CLIENT_DEAL_VIEWER",
            "CLIENT_DEAL_NEGOTIATOR",
            "CLIENT_DEAL_APPROVER"
          ]
        },
        "visibleToSeller": {
          "description": "Whether the client buyer will be visible to sellers.",
          "type": "boolean"
        },
        "entityId": {
          "description": "Numerical identifier of the client entity.\nThe entity can be an advertiser, a brand, or an agency.\nThis identifier is unique among all the entities with the same type.\n\nA list of all known advertisers with their identifiers is available in the\n[advertisers.txt](https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt)\nfile.\n\nA list of all known brands with their identifiers is available in the\n[brands.txt](https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt)\nfile.\n\nA list of all known agencies with their identifiers is available in the\n[agencies.txt](https://storage.googleapis.com/adx-rtb-dictionaries/agencies.txt)\nfile.",
          "format": "int64",
          "type": "string"
        },
        "clientAccountId": {
          "description": "The globally-unique numerical ID of the client.\nThe value of this field is ignored in create and update operations.",
          "format": "int64",
          "type": "string"
        },
        "entityName": {
          "description": "The name of the entity. This field is automatically fetched based on\nthe type and ID.\nThe value of this field is ignored in create and update operations.",
          "type": "string"
        },
        "status": {
          "description": "The status of the client buyer.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined client status.",
            "A client that is currently disabled.",
            "A client that is currently active."
          ],
          "enum": [
            "CLIENT_STATUS_UNSPECIFIED",
            "DISABLED",
            "ACTIVE"
          ]
        },
        "partnerClientId": {
          "description": "Optional arbitrary unique identifier of this client buyer from the\nstandpoint of its Ad Exchange sponsor buyer.\n\nThis field can be used to associate a client buyer with the identifier\nin the namespace of its sponsor buyer, lookup client buyers by that\nidentifier and verify whether an Ad Exchange counterpart of a given client\nbuyer already exists.\n\nIf present, must be unique among all the client buyers for its\nAd Exchange sponsor buyer.",
          "type": "string"
        },
        "entityType": {
          "enumDescriptions": [
            "A placeholder for an undefined client entity type. Should not be used.",
            "An advertiser.",
            "A brand.",
            "An advertising agency."
          ],
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "ADVERTISER",
            "BRAND",
            "AGENCY"
          ],
          "description": "The type of the client entity: `ADVERTISER`, `BRAND`, or `AGENCY`.",
          "type": "string"
        }
      },
      "id": "Client"
    },
    "ListCreativeStatusBreakdownByCreativeResponse": {
      "description": "Response message for listing all creatives associated with a given filtered\nbid reason.",
      "type": "object",
      "properties": {
        "filteredBidCreativeRows": {
          "description": "List of rows, with counts of bids with a given creative status aggregated\nby creative.",
          "type": "array",
          "items": {
            "$ref": "FilteredBidCreativeRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListCreativeStatusBreakdownByCreativeRequest.pageToken\nfield in the subsequent call to the filteredBids.creatives.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListCreativeStatusBreakdownByCreativeResponse"
    },
    "Correction": {
      "description": "@OutputOnly Shows any corrections that were applied to this creative.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Additional details about what was corrected.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "enumDescriptions": [
            "The correction type is unknown. Refer to the details for more information.",
            "The ad's declared vendors did not match the vendors that were detected.\nThe detected vendors were added.",
            "The ad had the SSL attribute declared but was not SSL-compliant.\nThe SSL attribute was removed.",
            "The ad was declared as Flash-free but contained Flash, so the Flash-free\nattribute was removed.",
            "The ad was not declared as Flash-free but it did not reference any flash\ncontent, so the Flash-free attribute was added.",
            "The ad did not declare a required creative attribute.\nThe attribute was added.",
            "The ad did not declare a required technology vendor.\nThe technology vendor was added.",
            "The ad did not declare the SSL attribute but was SSL-compliant, so the\nSSL attribute was added.",
            "Properties consistent with In-banner video were found, so an\nIn-Banner Video attribute was added.",
            "The ad makes calls to the MRAID API so the MRAID attribute was added.",
            "The ad unnecessarily declared the Flash attribute, so the Flash attribute\nwas removed.",
            "The ad contains video content."
          ],
          "enum": [
            "CORRECTION_TYPE_UNSPECIFIED",
            "VENDOR_IDS_ADDED",
            "SSL_ATTRIBUTE_REMOVED",
            "FLASH_FREE_ATTRIBUTE_REMOVED",
            "FLASH_FREE_ATTRIBUTE_ADDED",
            "REQUIRED_ATTRIBUTE_ADDED",
            "REQUIRED_VENDOR_ADDED",
            "SSL_ATTRIBUTE_ADDED",
            "IN_BANNER_VIDEO_ATTRIBUTE_ADDED",
            "MRAID_ATTRIBUTE_ADDED",
            "FLASH_ATTRIBUTE_REMOVED",
            "VIDEO_IN_SNIPPET_ATTRIBUTE_ADDED"
          ],
          "description": "The type of correction that was applied to the creative.",
          "type": "string"
        },
        "contexts": {
          "description": "The contexts for the correction.",
          "type": "array",
          "items": {
            "$ref": "ServingContext"
          }
        }
      },
      "id": "Correction"
    },
    "FilterSet": {
      "description": "A set of filters that is applied to a request for data.\nWithin a filter set, an AND operation is performed across the filters\nrepresented by each field. An OR operation is performed across the filters\nrepresented by the multiple values of a repeated field. E.g.\n\"format=VIDEO AND deal_id=12 AND (seller_network_id=34 OR\nseller_network_id=56)\"",
      "type": "object",
      "properties": {
        "absoluteDateRange": {
          "description": "An absolute date range, defined by a start date and an end date.\nInterpreted relative to Pacific time zone.",
          "$ref": "AbsoluteDateRange"
        },
        "environment": {
          "enumDescriptions": [
            "A placeholder for an undefined environment; indicates that no environment\nfilter will be applied.",
            "The ad impression appears on the web.",
            "The ad impression appears in an app."
          ],
          "enum": [
            "ENVIRONMENT_UNSPECIFIED",
            "WEB",
            "APP"
          ],
          "description": "The environment on which to filter; optional.",
          "type": "string"
        },
        "format": {
          "enumDescriptions": [
            "A placeholder for an undefined format; indicates that no format filter\nwill be applied.",
            "The ad impression is display format (i.e. an image).",
            "The ad impression is video format."
          ],
          "enum": [
            "FORMAT_UNSPECIFIED",
            "DISPLAY",
            "VIDEO"
          ],
          "description": "DEPRECATED: use repeated formats field instead.\nThe format on which to filter; optional.",
          "type": "string"
        },
        "dealId": {
          "description": "The ID of the deal on which to filter; optional. This field may be set\nonly for a filter set that accesses account-level troubleshooting data,\ni.e. one whose name matches the `bidders/*/accounts/*/filterSets/*`\npattern.",
          "format": "int64",
          "type": "string"
        },
        "timeSeriesGranularity": {
          "description": "The granularity of time intervals if a time series breakdown is desired;\noptional.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an unspecified interval; no time series is applied.\nAll rows in response will contain data for the entire requested time range.",
            "Indicates that data will be broken down by the hour.",
            "Indicates that data will be broken down by the day."
          ],
          "enum": [
            "TIME_SERIES_GRANULARITY_UNSPECIFIED",
            "HOURLY",
            "DAILY"
          ]
        },
        "realtimeTimeRange": {
          "$ref": "RealtimeTimeRange",
          "description": "An open-ended realtime time range, defined by the aggregation start\ntimestamp."
        },
        "formats": {
          "enumDescriptions": [
            "A placeholder for an undefined format; indicates that no format filter\nwill be applied.",
            "The ad impression is display format (i.e. an image).",
            "The ad impression is video format."
          ],
          "description": "The list of formats on which to filter; may be empty. The filters\nrepresented by multiple formats are ORed together (i.e. if non-empty,\nresults must match any one of the formats).",
          "type": "array",
          "items": {
            "enum": [
              "FORMAT_UNSPECIFIED",
              "DISPLAY",
              "VIDEO"
            ],
            "type": "string"
          }
        },
        "creativeId": {
          "description": "The ID of the creative on which to filter; optional. This field may be set\nonly for a filter set that accesses account-level troubleshooting data,\ni.e. one whose name matches the `bidders/*/accounts/*/filterSets/*`\npattern.",
          "type": "string"
        },
        "relativeDateRange": {
          "description": "A relative date range, defined by an offset from today and a duration.\nInterpreted relative to Pacific time zone.",
          "$ref": "RelativeDateRange"
        },
        "platforms": {
          "description": "The list of platforms on which to filter; may be empty. The filters\nrepresented by multiple platforms are ORed together (i.e. if non-empty,\nresults must match any one of the platforms).",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "DESKTOP",
              "TABLET",
              "MOBILE"
            ]
          },
          "enumDescriptions": [
            "A placeholder for an undefined platform; indicates that no platform\nfilter will be applied.",
            "The ad impression appears on a desktop.",
            "The ad impression appears on a tablet.",
            "The ad impression appears on a mobile device."
          ]
        },
        "name": {
          "description": "A user-defined name of the filter set. Filter set names must be unique\nglobally and match one of the patterns:\n\n- `bidders/*/filterSets/*` (for accessing bidder-level troubleshooting\ndata)\n- `bidders/*/accounts/*/filterSets/*` (for accessing account-level\ntroubleshooting data)\n\nThis field is required in create operations.",
          "type": "string"
        },
        "sellerNetworkIds": {
          "description": "The list of IDs of the seller (publisher) networks on which to filter;\nmay be empty. The filters represented by multiple seller network IDs are\nORed together (i.e. if non-empty, results must match any one of the\npublisher networks).\nSee [seller-network-ids](https://developers.google.com/ad-exchange/rtb/downloads/seller-network-ids)\nfile for the set of existing seller network IDs.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "id": "FilterSet"
    },
    "CalloutStatusRow": {
      "description": "The number of impressions with the specified dimension values where the\ncorresponding bid request or bid response was not successful, as described by\nthe specified callout status.",
      "type": "object",
      "properties": {
        "impressionCount": {
          "description": "The number of impressions for which there was a bid request or bid response\nwith the specified callout status.",
          "$ref": "MetricValue"
        },
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        },
        "calloutStatusId": {
          "description": "The ID of the callout status.\nSee [callout-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/callout-status-codes).",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "CalloutStatusRow"
    },
    "ListDealAssociationsResponse": {
      "description": "A response for listing creative and deal associations",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListDealAssociationsRequest.page_token\nfield in the subsequent call to 'ListDealAssociation' method to retrieve\nthe next page of results.",
          "type": "string"
        },
        "associations": {
          "description": "The list of associations.",
          "type": "array",
          "items": {
            "$ref": "CreativeDealAssociation"
          }
        }
      },
      "id": "ListDealAssociationsResponse"
    },
    "Disapproval": {
      "description": "@OutputOnly The reason and details for a disapproval.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Additional details about the reason for disapproval.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reason": {
          "description": "The categorized reason for disapproval.",
          "type": "string",
          "enumDescriptions": [
            "The length of the image animation is longer than allowed.",
            "The click through URL doesn't work properly.",
            "Something is wrong with the creative itself.",
            "The ad makes a fourth party call to an unapproved vendor.",
            "The ad targets consumers using remarketing lists and/or collects\ndata for subsequent use in retargeting, but does not correctly declare\nthat use.",
            "Clicking on the ad leads to an error page.",
            "The ad size when rendered does not match the declaration.",
            "Ads with a white background require a border, which was missing.",
            "The creative attempts to set cookies from a fourth party that is not\ncertified.",
            "The creative sets an LSO object.",
            "The ad serves a blank.",
            "The ad uses rotation, but not all destination URLs were declared.",
            "There is a problem with the way the click macro is used.",
            "The ad technology declaration is not accurate.",
            "The actual destination URL does not match the declared destination URL.",
            "The declared expanding direction does not match the actual direction.",
            "The ad does not expand in a supported direction.",
            "The ad uses an expandable vendor that is not supported.",
            "There was an issue with the expandable ad.",
            "The ad uses a video vendor that is not supported.",
            "The length of the video ad is not supported.",
            "The format of the video ad is not supported.",
            "There was an issue with the video ad.",
            "The landing page does not conform to Ad Exchange policy.",
            "The ad or the landing page may contain malware.",
            "The ad contains adult images or video content.",
            "The ad contains text that is unclear or inaccurate.",
            "The ad promotes counterfeit designer goods.",
            "The ad causes a popup window to appear.",
            "The creative does not follow policies set for the RTB protocol.",
            "The ad contains a URL that uses a numeric IP address for the domain.",
            "The ad or landing page contains unacceptable content because it initiated\na software or executable download.",
            "The ad set an unauthorized cookie on a Google domain.",
            "Flash content found when no flash was declared.",
            "SSL support declared but not working correctly.",
            "Rich Media - Direct Download in Ad (ex. PDF download).",
            "Maximum download size exceeded.",
            "Bad Destination URL: Site Not Crawlable.",
            "Bad URL: Legal disapproval.",
            "Pharmaceuticals, Gambling, Alcohol not allowed and at least one was\ndetected.",
            "Dynamic DNS at Destination URL.",
            "Poor Image / Video Quality.",
            "For example, Image Trick to Click.",
            "Incorrect Image Layout.",
            "Irrelevant Image / Video.",
            "Broken back button.",
            "Misleading/Inaccurate claims in ads.",
            "Restricted Products.",
            "Unacceptable content. For example, malware.",
            "The ad automatically redirects to the destination site without a click,\nor reports a click when none were made.",
            "The ad uses URL protocols that do not exist or are not allowed on AdX.",
            "Restricted content (for example, alcohol) was found in the ad but not\ndeclared.",
            "Violation of the remarketing list policy.",
            "The destination site's robot.txt file prevents it from being crawled.",
            "Click to download must link to an app.",
            "A review extension must be an accurate review.",
            "Sexually explicit content.",
            "The ad tries to gain an unfair traffic advantage.",
            "The ad tries to circumvent Google's advertising systems.",
            "The ad promotes dangerous knives.",
            "The ad promotes explosives.",
            "The ad promotes guns & parts.",
            "The ad promotes recreational drugs/services & related equipment.",
            "The ad promotes tobacco products/services & related equipment.",
            "The ad promotes weapons.",
            "The ad is unclear or irrelevant to the destination site.",
            "The ad does not meet professional standards.",
            "The promotion is unnecessarily difficult to navigate.",
            "Violation of Google's policy for interest-based ads.",
            "Misuse of personal information.",
            "Omission of relevant information.",
            "Unavailable promotions.",
            "Misleading or unrealistic promotions.",
            "Offensive or inappropriate content.",
            "Capitalizing on sensitive events.",
            "Shocking content.",
            "Products & Services that enable dishonest behavior.",
            "The ad does not meet technical requirements.",
            "Restricted political content.",
            "Unsupported content.",
            "Invalid bidding method.",
            "Video length exceeds limits.",
            "Unacceptable content: Japanese healthcare.",
            "Online pharmacy ID required.",
            "Unacceptable content: Abortion.",
            "Unacceptable content: Birth control.",
            "Restricted in China.",
            "Unacceptable content: Korean healthcare.",
            "Non-family safe or adult content.",
            "Clinical trial recruitment.",
            "Maximum number of HTTP calls exceeded.",
            "Maximum number of cookies exceeded.",
            "Financial service ad does not adhere to specifications.",
            "Flash content was found in an unsupported context."
          ],
          "enum": [
            "LENGTH_OF_IMAGE_ANIMATION",
            "BROKEN_URL",
            "MEDIA_NOT_FUNCTIONAL",
            "INVALID_FOURTH_PARTY_CALL",
            "INCORRECT_REMARKETING_DECLARATION",
            "LANDING_PAGE_ERROR",
            "AD_SIZE_DOES_NOT_MATCH_AD_SLOT",
            "NO_BORDER",
            "FOURTH_PARTY_BROWSER_COOKIES",
            "LSO_OBJECTS",
            "BLANK_CREATIVE",
            "DESTINATION_URLS_UNDECLARED",
            "PROBLEM_WITH_CLICK_MACRO",
            "INCORRECT_AD_TECHNOLOGY_DECLARATION",
            "INCORRECT_DESTINATION_URL_DECLARATION",
            "EXPANDABLE_INCORRECT_DIRECTION",
            "EXPANDABLE_DIRECTION_NOT_SUPPORTED",
            "EXPANDABLE_INVALID_VENDOR",
            "EXPANDABLE_FUNCTIONALITY",
            "VIDEO_INVALID_VENDOR",
            "VIDEO_UNSUPPORTED_LENGTH",
            "VIDEO_UNSUPPORTED_FORMAT",
            "VIDEO_FUNCTIONALITY",
            "LANDING_PAGE_DISABLED",
            "MALWARE_SUSPECTED",
            "ADULT_IMAGE_OR_VIDEO",
            "INACCURATE_AD_TEXT",
            "COUNTERFEIT_DESIGNER_GOODS",
            "POP_UP",
            "INVALID_RTB_PROTOCOL_USAGE",
            "RAW_IP_ADDRESS_IN_SNIPPET",
            "UNACCEPTABLE_CONTENT_SOFTWARE",
            "UNAUTHORIZED_COOKIE_ON_GOOGLE_DOMAIN",
            "UNDECLARED_FLASH_OBJECTS",
            "INVALID_SSL_DECLARATION",
            "DIRECT_DOWNLOAD_IN_AD",
            "MAXIMUM_DOWNLOAD_SIZE_EXCEEDED",
            "DESTINATION_URL_SITE_NOT_CRAWLABLE",
            "BAD_URL_LEGAL_DISAPPROVAL",
            "PHARMA_GAMBLING_ALCOHOL_NOT_ALLOWED",
            "DYNAMIC_DNS_AT_DESTINATION_URL",
            "POOR_IMAGE_OR_VIDEO_QUALITY",
            "UNACCEPTABLE_IMAGE_CONTENT",
            "INCORRECT_IMAGE_LAYOUT",
            "IRRELEVANT_IMAGE_OR_VIDEO",
            "DESTINATION_SITE_DOES_NOT_ALLOW_GOING_BACK",
            "MISLEADING_CLAIMS_IN_AD",
            "RESTRICTED_PRODUCTS",
            "UNACCEPTABLE_CONTENT",
            "AUTOMATED_AD_CLICKING",
            "INVALID_URL_PROTOCOL",
            "UNDECLARED_RESTRICTED_CONTENT",
            "INVALID_REMARKETING_LIST_USAGE",
            "DESTINATION_SITE_NOT_CRAWLABLE_ROBOTS_TXT",
            "CLICK_TO_DOWNLOAD_NOT_AN_APP",
            "INACCURATE_REVIEW_EXTENSION",
            "SEXUALLY_EXPLICIT_CONTENT",
            "GAINING_AN_UNFAIR_ADVANTAGE",
            "GAMING_THE_GOOGLE_NETWORK",
            "DANGEROUS_PRODUCTS_KNIVES",
            "DANGEROUS_PRODUCTS_EXPLOSIVES",
            "DANGEROUS_PRODUCTS_GUNS",
            "DANGEROUS_PRODUCTS_DRUGS",
            "DANGEROUS_PRODUCTS_TOBACCO",
            "DANGEROUS_PRODUCTS_WEAPONS",
            "UNCLEAR_OR_IRRELEVANT_AD",
            "PROFESSIONAL_STANDARDS",
            "DYSFUNCTIONAL_PROMOTION",
            "INVALID_INTEREST_BASED_AD",
            "MISUSE_OF_PERSONAL_INFORMATION",
            "OMISSION_OF_RELEVANT_INFORMATION",
            "UNAVAILABLE_PROMOTIONS",
            "MISLEADING_PROMOTIONS",
            "INAPPROPRIATE_CONTENT",
            "SENSITIVE_EVENTS",
            "SHOCKING_CONTENT",
            "ENABLING_DISHONEST_BEHAVIOR",
            "TECHNICAL_REQUIREMENTS",
            "RESTRICTED_POLITICAL_CONTENT",
            "UNSUPPORTED_CONTENT",
            "INVALID_BIDDING_METHOD",
            "VIDEO_TOO_LONG",
            "VIOLATES_JAPANESE_PHARMACY_LAW",
            "UNACCREDITED_PET_PHARMACY",
            "ABORTION",
            "CONTRACEPTIVES",
            "NEED_CERTIFICATES_TO_ADVERTISE_IN_CHINA",
            "KCDSP_REGISTRATION",
            "NOT_FAMILY_SAFE",
            "CLINICAL_TRIAL_RECRUITMENT",
            "MAXIMUM_NUMBER_OF_HTTP_CALLS_EXCEEDED",
            "MAXIMUM_NUMBER_OF_COOKIES_EXCEEDED",
            "PERSONAL_LOANS",
            "UNSUPPORTED_FLASH_CONTENT"
          ]
        }
      },
      "id": "Disapproval"
    },
    "StopWatchingCreativeRequest": {
      "description": "A request for stopping notifications for changes to creative Status.",
      "type": "object",
      "properties": {},
      "id": "StopWatchingCreativeRequest"
    },
    "ServingRestriction": {
      "description": "@OutputOnly A representation of the status of an ad in a\nspecific context. A context here relates to where something ultimately serves\n(for example, a user or publisher geo, a platform, an HTTPS vs HTTP request,\nor the type of auction).",
      "type": "object",
      "properties": {
        "disapprovalReasons": {
          "description": "Any disapprovals bound to this restriction.\nOnly present if status=DISAPPROVED.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "array",
          "items": {
            "$ref": "Disapproval"
          }
        },
        "contexts": {
          "description": "The contexts for the restriction.",
          "type": "array",
          "items": {
            "$ref": "ServingContext"
          }
        },
        "status": {
          "description": "The status of the creative in this context (for example, it has been\nexplicitly disapproved or is pending review).",
          "type": "string",
          "enumDescriptions": [
            "The status is not known.",
            "The ad was disapproved in this context.",
            "The ad is pending review in this context."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "DISAPPROVAL",
            "PENDING_REVIEW"
          ]
        }
      },
      "id": "ServingRestriction"
    },
    "Date": {
      "description": "Represents a whole calendar date, e.g. date of birth. The time of day and\ntime zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. The day may be 0 to\nrepresent a year and month where the day is not significant, e.g. credit card\nexpiration date. The year may be 0 to represent a month and day independent\nof year, e.g. anniversary date. Related types are google.type.TimeOfDay\nand `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year/month where the day is not significant.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "description": "Month of year. Must be from 1 to 12.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Date"
    },
    "RowDimensions": {
      "description": "A response may include multiple rows, breaking down along various dimensions.\nEncapsulates the values of all dimensions for a given row.",
      "type": "object",
      "properties": {
        "timeInterval": {
          "description": "The time interval that this row represents.",
          "$ref": "TimeInterval"
        }
      },
      "id": "RowDimensions"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "AppContext": {
      "description": "@OutputOnly The app type the restriction applies to for mobile device.",
      "type": "object",
      "properties": {
        "appTypes": {
          "description": "The app types this restriction applies to.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NATIVE",
              "WEB"
            ]
          },
          "enumDescriptions": [
            "Native app context.",
            "Mobile web app context."
          ]
        }
      },
      "id": "AppContext"
    },
    "ListFilteredBidsResponse": {
      "description": "Response message for listing all reasons that bids were filtered from the\nauction.",
      "type": "object",
      "properties": {
        "creativeStatusRows": {
          "description": "List of rows, with counts of filtered bids aggregated by filtering reason\n(i.e. creative status).",
          "type": "array",
          "items": {
            "$ref": "CreativeStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListFilteredBidsRequest.pageToken\nfield in the subsequent call to the filteredBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListFilteredBidsResponse"
    },
    "SecurityContext": {
      "description": "@OutputOnly A security context.",
      "type": "object",
      "properties": {
        "securities": {
          "description": "The security types in this context.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "INSECURE",
              "SSL"
            ]
          },
          "enumDescriptions": [
            "Matches impressions that require insecure compatibility.",
            "Matches impressions that require SSL compatibility."
          ]
        }
      },
      "id": "SecurityContext"
    },
    "HtmlContent": {
      "description": "HTML content for a creative.",
      "type": "object",
      "properties": {
        "width": {
          "description": "The width of the HTML snippet in pixels.",
          "format": "int32",
          "type": "integer"
        },
        "snippet": {
          "description": "The HTML snippet that displays the ad when inserted in the web page.",
          "type": "string"
        },
        "height": {
          "description": "The height of the HTML snippet in pixels.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "HtmlContent"
    },
    "ListCreativesResponse": {
      "description": "A response for listing creatives.",
      "type": "object",
      "properties": {
        "creatives": {
          "description": "The list of creatives.",
          "type": "array",
          "items": {
            "$ref": "Creative"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListCreativesRequest.page_token\nfield in the subsequent call to `ListCreatives` method to retrieve the next\npage of results.",
          "type": "string"
        }
      },
      "id": "ListCreativesResponse"
    },
    "ListFilteredBidRequestsResponse": {
      "description": "Response message for listing all reasons that bid requests were filtered and\nnot sent to the buyer.",
      "type": "object",
      "properties": {
        "calloutStatusRows": {
          "description": "List of rows, with counts of filtered bid requests aggregated by callout\nstatus.",
          "type": "array",
          "items": {
            "$ref": "CalloutStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListFilteredBidRequestsRequest.pageToken\nfield in the subsequent call to the filteredBidRequests.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListFilteredBidRequestsResponse"
    },
    "ListBidMetricsResponse": {
      "description": "Response message for listing the metrics that are measured in number of bids.",
      "type": "object",
      "properties": {
        "bidMetricsRows": {
          "description": "List of rows, each containing a set of bid metrics.",
          "type": "array",
          "items": {
            "$ref": "BidMetricsRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListBidMetricsRequest.pageToken\nfield in the subsequent call to the bidMetrics.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListBidMetricsResponse"
    },
    "Reason": {
      "description": "A specific filtering status and how many times it occurred.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The filtering status code. Please refer to the\n[creative-status-codes.txt](https://storage.googleapis.com/adx-rtb-dictionaries/creative-status-codes.txt)\nfile for different statuses.",
          "format": "int32",
          "type": "integer"
        },
        "count": {
          "description": "The number of times the creative was filtered for the status. The\ncount is aggregated across all publishers on the exchange.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "Reason"
    },
    "ListNonBillableWinningBidsResponse": {
      "description": "Response message for listing all reasons for which a buyer was not billed for\na winning bid.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListNonBillableWinningBidsRequest.pageToken\nfield in the subsequent call to the nonBillableWinningBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "nonBillableWinningBidStatusRows": {
          "description": "List of rows, with counts of bids not billed aggregated by reason.",
          "type": "array",
          "items": {
            "$ref": "NonBillableWinningBidStatusRow"
          }
        }
      },
      "id": "ListNonBillableWinningBidsResponse"
    },
    "ListLosingBidsResponse": {
      "description": "Response message for listing all reasons that bids lost in the auction.",
      "type": "object",
      "properties": {
        "creativeStatusRows": {
          "description": "List of rows, with counts of losing bids aggregated by loss reason (i.e.\ncreative status).",
          "type": "array",
          "items": {
            "$ref": "CreativeStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListLosingBidsRequest.pageToken\nfield in the subsequent call to the losingBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListLosingBidsResponse"
    },
    "VideoContent": {
      "description": "Video content for a creative.",
      "type": "object",
      "properties": {
        "videoUrl": {
          "description": "The URL to fetch a video ad.",
          "type": "string"
        }
      },
      "id": "VideoContent"
    },
    "ImpressionMetricsRow": {
      "description": "The set of metrics that are measured in numbers of impressions, representing\nhow many impressions with the specified dimension values were considered\neligible at each stage of the bidding funnel.",
      "type": "object",
      "properties": {
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        },
        "availableImpressions": {
          "$ref": "MetricValue",
          "description": "The number of impressions available to the buyer on Ad Exchange.\nIn some cases this value may be unavailable."
        },
        "inventoryMatches": {
          "description": "The number of impressions that match the buyer's inventory pretargeting.",
          "$ref": "MetricValue"
        },
        "bidRequests": {
          "$ref": "MetricValue",
          "description": "The number of impressions for which Ad Exchange sent the buyer a bid\nrequest."
        },
        "responsesWithBids": {
          "description": "The number of impressions for which Ad Exchange received a response from\nthe buyer that contained at least one applicable bid.",
          "$ref": "MetricValue"
        },
        "successfulResponses": {
          "description": "The number of impressions for which the buyer successfully sent a response\nto Ad Exchange.",
          "$ref": "MetricValue"
        }
      },
      "id": "ImpressionMetricsRow"
    },
    "AuctionContext": {
      "description": "@OutputOnly The auction type the restriction applies to.",
      "type": "object",
      "properties": {
        "auctionTypes": {
          "enumDescriptions": [
            "The restriction applies to open auction.",
            "The restriction applies to direct deals."
          ],
          "description": "The auction types this restriction applies to.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "OPEN_AUCTION",
              "DIRECT_DEALS"
            ]
          }
        }
      },
      "id": "AuctionContext"
    },
    "ListImpressionMetricsResponse": {
      "description": "Response message for listing the metrics that are measured in number of\nimpressions.",
      "type": "object",
      "properties": {
        "impressionMetricsRows": {
          "description": "List of rows, each containing a set of impression metrics.",
          "type": "array",
          "items": {
            "$ref": "ImpressionMetricsRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListImpressionMetricsRequest.pageToken\nfield in the subsequent call to the impressionMetrics.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListImpressionMetricsResponse"
    },
    "BidMetricsRow": {
      "description": "The set of metrics that are measured in numbers of bids, representing how\nmany bids with the specified dimension values were considered eligible at\neach stage of the bidding funnel;",
      "type": "object",
      "properties": {
        "viewableImpressions": {
          "description": "The number of bids for which the corresponding impression was viewable (as\ndefined by Active View).",
          "$ref": "MetricValue"
        },
        "impressionsWon": {
          "$ref": "MetricValue",
          "description": "The number of bids that won an impression."
        },
        "measurableImpressions": {
          "description": "The number of bids for which the corresponding impression was measurable\nfor viewability (as defined by Active View).",
          "$ref": "MetricValue"
        },
        "bids": {
          "$ref": "MetricValue",
          "description": "The number of bids that Ad Exchange received from the buyer."
        },
        "billedImpressions": {
          "$ref": "MetricValue",
          "description": "The number of bids for which the buyer was billed."
        },
        "bidsInAuction": {
          "description": "The number of bids that were permitted to compete in the auction.",
          "$ref": "MetricValue"
        },
        "rowDimensions": {
          "$ref": "RowDimensions",
          "description": "The values of all dimensions associated with metric values in this row."
        }
      },
      "id": "BidMetricsRow"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "canonicalName": "AdExchangeBuyerII",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/adexchange.buyer": {
          "description": "Manage your Ad Exchange buyer account configuration"
        }
      }
    }
  },
  "rootUrl": "https://adexchangebuyer.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "adexchangebuyer2"
}
