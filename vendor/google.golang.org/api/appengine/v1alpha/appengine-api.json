{
  "resources": {
    "apps": {
      "resources": {
        "authorizedCertificates": {
          "methods": {
            "delete": {
              "description": "Deletes the specified SSL certificate.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "appsId",
                "authorizedCertificatesId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "authorizedCertificatesId": {
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "appsId": {
                  "description": "Part of `name`. Name of the resource to delete. Example: apps/myapp/authorizedCertificates/12345.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "id": "appengine.apps.authorizedCertificates.delete",
              "path": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}"
            },
            "list": {
              "response": {
                "$ref": "ListAuthorizedCertificatesResponse"
              },
              "parameterOrder": [
                "appsId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "Maximum results to return per page.",
                  "format": "int32",
                  "type": "integer"
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "BASIC_CERTIFICATE",
                    "FULL_CERTIFICATE"
                  ],
                  "description": "Controls the set of fields returned in the LIST response.",
                  "type": "string"
                },
                "appsId": {
                  "location": "path",
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates",
              "path": "v1alpha/apps/{appsId}/authorizedCertificates",
              "id": "appengine.apps.authorizedCertificates.list",
              "description": "Lists all SSL certificates the user is authorized to administer."
            },
            "get": {
              "description": "Gets the specified SSL certificate.",
              "response": {
                "$ref": "AuthorizedCertificate"
              },
              "parameterOrder": [
                "appsId",
                "authorizedCertificatesId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "appsId": {
                  "description": "Part of `name`. Name of the resource requested. Example: apps/myapp/authorizedCertificates/12345.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "view": {
                  "description": "Controls the set of fields returned in the GET response.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "BASIC_CERTIFICATE",
                    "FULL_CERTIFICATE"
                  ]
                },
                "authorizedCertificatesId": {
                  "location": "path",
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "path": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "id": "appengine.apps.authorizedCertificates.get"
            },
            "patch": {
              "response": {
                "$ref": "AuthorizedCertificate"
              },
              "parameterOrder": [
                "appsId",
                "authorizedCertificatesId"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "authorizedCertificatesId": {
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "updateMask": {
                  "description": "Standard field mask for the set of fields to be updated. Updates are only supported on the certificate_raw_data and display_name fields.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                },
                "appsId": {
                  "location": "path",
                  "description": "Part of `name`. Name of the resource to update. Example: apps/myapp/authorizedCertificates/12345.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "path": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "id": "appengine.apps.authorizedCertificates.patch",
              "request": {
                "$ref": "AuthorizedCertificate"
              },
              "description": "Updates the specified SSL certificate. To renew a certificate and maintain its existing domain mappings, update certificate_data with a new certificate. The new certificate must be applicable to the same domains as the original certificate. The certificate display_name may also be updated."
            },
            "create": {
              "response": {
                "$ref": "AuthorizedCertificate"
              },
              "parameterOrder": [
                "appsId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "appsId": {
                  "location": "path",
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates",
              "path": "v1alpha/apps/{appsId}/authorizedCertificates",
              "id": "appengine.apps.authorizedCertificates.create",
              "description": "Uploads the specified SSL certificate.",
              "request": {
                "$ref": "AuthorizedCertificate"
              }
            }
          }
        },
        "authorizedDomains": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListAuthorizedDomainsResponse"
              },
              "parameterOrder": [
                "appsId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "pageSize": {
                  "description": "Maximum results to return per page.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "appsId": {
                  "location": "path",
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha/apps/{appsId}/authorizedDomains",
              "path": "v1alpha/apps/{appsId}/authorizedDomains",
              "id": "appengine.apps.authorizedDomains.list",
              "description": "Lists all domains the user is authorized to administer."
            }
          }
        },
        "operations": {
          "methods": {
            "list": {
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListOperationsResponse"
              },
              "parameterOrder": [
                "appsId"
              ],
              "parameters": {
                "filter": {
                  "description": "The standard list filter.",
                  "type": "string",
                  "location": "query"
                },
                "appsId": {
                  "location": "path",
                  "description": "Part of `name`. The name of the operation's parent resource.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1alpha/apps/{appsId}/operations",
              "id": "appengine.apps.operations.list",
              "path": "v1alpha/apps/{appsId}/operations"
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "appsId",
                "operationsId"
              ],
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "appsId": {
                  "description": "Part of `name`. The name of the operation resource.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "operationsId": {
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1alpha/apps/{appsId}/operations/{operationsId}",
              "id": "appengine.apps.operations.get",
              "path": "v1alpha/apps/{appsId}/operations/{operationsId}",
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
            }
          }
        },
        "locations": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "appsId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "appsId": {
                  "location": "path",
                  "description": "Part of `name`. The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "description": "The standard list filter.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha/apps/{appsId}/locations",
              "path": "v1alpha/apps/{appsId}/locations",
              "id": "appengine.apps.locations.list",
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "description": "Get information about a location.",
              "response": {
                "$ref": "Location"
              },
              "parameterOrder": [
                "appsId",
                "locationsId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "locationsId": {
                  "location": "path",
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string"
                },
                "appsId": {
                  "location": "path",
                  "description": "Part of `name`. Resource name for the location.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1alpha/apps/{appsId}/locations/{locationsId}",
              "path": "v1alpha/apps/{appsId}/locations/{locationsId}",
              "id": "appengine.apps.locations.get"
            }
          }
        },
        "domainMappings": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListDomainMappingsResponse"
              },
              "parameterOrder": [
                "appsId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "pageSize": {
                  "description": "Maximum results to return per page.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "appsId": {
                  "location": "path",
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha/apps/{appsId}/domainMappings",
              "path": "v1alpha/apps/{appsId}/domainMappings",
              "id": "appengine.apps.domainMappings.list",
              "description": "Lists the domain mappings on an application."
            },
            "get": {
              "response": {
                "$ref": "DomainMapping"
              },
              "parameterOrder": [
                "appsId",
                "domainMappingsId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "domainMappingsId": {
                  "location": "path",
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string"
                },
                "appsId": {
                  "location": "path",
                  "description": "Part of `name`. Name of the resource requested. Example: apps/myapp/domainMappings/example.com.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}",
              "path": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}",
              "id": "appengine.apps.domainMappings.get",
              "description": "Gets the specified domain mapping."
            },
            "patch": {
              "request": {
                "$ref": "DomainMapping"
              },
              "description": "Updates the specified domain mapping. To map an SSL certificate to a domain mapping, update certificate_id to point to an AuthorizedCertificate resource. A user must be authorized to administer the associated domain in order to update a DomainMapping resource.",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "appsId",
                "domainMappingsId"
              ],
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "domainMappingsId": {
                  "location": "path",
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string"
                },
                "noManagedCertificate": {
                  "description": "Whether a managed certificate should be provided by App Engine. If true, a certificate ID must be manually set in the DomainMapping resource to configure SSL for this domain. If false, a managed certificate will be provisioned and a certificate ID will be automatically populated. Only applicable if ssl_settings.certificate_id is specified in the update mask.",
                  "type": "boolean",
                  "location": "query"
                },
                "updateMask": {
                  "description": "Standard field mask for the set of fields to be updated.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                },
                "appsId": {
                  "description": "Part of `name`. Name of the resource to update. Example: apps/myapp/domainMappings/example.com.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}",
              "id": "appengine.apps.domainMappings.patch",
              "path": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}"
            },
            "create": {
              "flatPath": "v1alpha/apps/{appsId}/domainMappings",
              "path": "v1alpha/apps/{appsId}/domainMappings",
              "id": "appengine.apps.domainMappings.create",
              "description": "Maps a domain to an application. A user must be authorized to administer a domain in order to map it to an application. For a list of available authorized domains, see AuthorizedDomains.ListAuthorizedDomains.",
              "request": {
                "$ref": "DomainMapping"
              },
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "appsId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "appsId": {
                  "location": "path",
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "required": true,
                  "type": "string"
                },
                "overrideStrategy": {
                  "location": "query",
                  "enum": [
                    "UNSPECIFIED_DOMAIN_OVERRIDE_STRATEGY",
                    "STRICT",
                    "OVERRIDE"
                  ],
                  "description": "Whether the domain creation should override any existing mappings for this domain. By default, overrides are rejected.",
                  "type": "string"
                },
                "noManagedCertificate": {
                  "location": "query",
                  "description": "Whether a managed certificate should be provided by App Engine. If true, a certificate ID must be manaually set in the DomainMapping resource to configure SSL for this domain. If false, a managed certificate will be provisioned and a certificate ID will be automatically populated.",
                  "type": "boolean"
                }
              }
            },
            "delete": {
              "description": "Deletes the specified domain mapping. A user must be authorized to administer the associated domain in order to delete a DomainMapping resource.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "appsId",
                "domainMappingsId"
              ],
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "appsId": {
                  "description": "Part of `name`. Name of the resource to delete. Example: apps/myapp/domainMappings/example.com.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "domainMappingsId": {
                  "location": "path",
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}",
              "id": "appengine.apps.domainMappings.delete",
              "path": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "pp": {
      "location": "query",
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true"
    },
    "bearer_token": {
      "location": "query",
      "description": "OAuth bearer token.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    }
  },
  "schemas": {
    "ListAuthorizedCertificatesResponse": {
      "description": "Response message for AuthorizedCertificates.ListAuthorizedCertificates.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "certificates": {
          "description": "The SSL certificates the user is authorized to administer.",
          "type": "array",
          "items": {
            "$ref": "AuthorizedCertificate"
          }
        }
      },
      "id": "ListAuthorizedCertificatesResponse"
    },
    "CreateVersionMetadataV1Beta": {
      "description": "Metadata for the given google.longrunning.Operation during a google.appengine.v1beta.CreateVersionRequest.",
      "type": "object",
      "properties": {
        "cloudBuildId": {
          "description": "The Cloud Build ID if one was created as part of the version create. @OutputOnly",
          "type": "string"
        }
      },
      "id": "CreateVersionMetadataV1Beta"
    },
    "ManagedCertificate": {
      "properties": {
        "lastRenewalTime": {
          "description": "Time at which the certificate was last renewed. The renewal process is fully managed. Certificate renewal will automatically occur before the certificate expires. Renewal errors can be tracked via ManagementStatus.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "status": {
          "enum": [
            "UNSPECIFIED_STATUS",
            "OK",
            "PENDING",
            "FAILED_RETRYING_INTERNAL",
            "FAILED_RETRYING_NOT_VISIBLE",
            "FAILED_PERMANENTLY_NOT_VISIBLE",
            "FAILED_RETRYING_CAA_FORBIDDEN",
            "FAILED_RETRYING_CAA_CHECKING"
          ],
          "description": "Status of certificate management. Refers to the most recent certificate acquisition or renewal attempt.@OutputOnly",
          "type": "string",
          "enumDescriptions": [
            "",
            "Certificate was successfully obtained and inserted into the serving system.",
            "Certificate is under active attempts to acquire or renew.",
            "Most recent renewal failed due to a system failure and will be retried. System failure is likely transient, and subsequent renewal attempts may succeed. The last successfully provisioned certificate may still be serving.",
            "Most recent renewal failed due to an invalid DNS setup and will be retried. Renewal attempts will continue to fail until the certificate domain's DNS configuration is fixed. The last successfully provisioned certificate may still be serving.",
            "All renewal attempts have been exhausted. Most recent renewal failed due to an invalid DNS setup and will not be retried. The last successfully provisioned certificate may still be serving.",
            "Most recent renewal failed due to an explicit CAA record that does not include the in-use CA, Let's Encrypt. Renewals will continue to fail until the CAA is reconfigured. The last successfully provisioned certificate may still be serving.",
            "Most recent renewal failed due to a CAA retrieval failure. This means that the domain's DNS provider does not properly handle CAA records, failing requests for CAA records when no CAA records are defined. Renewals will continue to fail until the DNS provider is changed or a CAA record is added for the given domain. The last successfully provisioned certificate may still be serving."
          ]
        }
      },
      "id": "ManagedCertificate",
      "description": "A certificate managed by App Engine.",
      "type": "object"
    },
    "OperationMetadataV1": {
      "description": "Metadata for the given google.longrunning.Operation.",
      "type": "object",
      "properties": {
        "warning": {
          "description": "Durable messages that persist on every operation poll. @OutputOnly",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "insertTime": {
          "description": "Time that this operation was created.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "target": {
          "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly",
          "type": "string"
        },
        "user": {
          "description": "User who requested this operation.@OutputOnly",
          "type": "string"
        },
        "ephemeralMessage": {
          "description": "Ephemeral message that may change every time the operation is polled. @OutputOnly",
          "type": "string"
        },
        "method": {
          "description": "API method that initiated this operation. Example: google.appengine.v1.Versions.CreateVersion.@OutputOnly",
          "type": "string"
        },
        "endTime": {
          "description": "Time that this operation completed.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "OperationMetadataV1"
    },
    "SslSettings": {
      "properties": {
        "isManagedCertificate": {
          "description": "Whether the mapped certificate is an App Engine managed certificate. Managed certificates are created by default with a domain mapping. To opt out, specify no_managed_certificate on a CREATE or UPDATE request.@OutputOnly",
          "type": "boolean"
        },
        "certificateId": {
          "description": "ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will remove SSL support.By default, a managed certificate is automatically created for every domain mapping. To omit SSL support or to configure SSL manually, specify no_managed_certificate on a CREATE or UPDATE request. You must be authorized to administer the AuthorizedCertificate resource to manually map it to a DomainMapping resource. Example: 12345.",
          "type": "string"
        }
      },
      "id": "SslSettings",
      "description": "SSL configuration for a DomainMapping resource.",
      "type": "object"
    },
    "ListDomainMappingsResponse": {
      "description": "Response message for DomainMappings.ListDomainMappings.",
      "type": "object",
      "properties": {
        "domainMappings": {
          "description": "The domain mappings for the application.",
          "type": "array",
          "items": {
            "$ref": "DomainMapping"
          }
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "id": "ListDomainMappingsResponse"
    },
    "OperationMetadataV1Alpha": {
      "description": "Metadata for the given google.longrunning.Operation.",
      "type": "object",
      "properties": {
        "method": {
          "description": "API method that initiated this operation. Example: google.appengine.v1alpha.Versions.CreateVersion.@OutputOnly",
          "type": "string"
        },
        "endTime": {
          "description": "Time that this operation completed.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "createVersionMetadata": {
          "$ref": "CreateVersionMetadataV1Alpha"
        },
        "warning": {
          "description": "Durable messages that persist on every operation poll. @OutputOnly",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "insertTime": {
          "description": "Time that this operation was created.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "target": {
          "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly",
          "type": "string"
        },
        "user": {
          "description": "User who requested this operation.@OutputOnly",
          "type": "string"
        },
        "ephemeralMessage": {
          "description": "Ephemeral message that may change every time the operation is polled. @OutputOnly",
          "type": "string"
        }
      },
      "id": "OperationMetadataV1Alpha"
    },
    "ListAuthorizedDomainsResponse": {
      "description": "Response message for AuthorizedDomains.ListAuthorizedDomains.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "domains": {
          "description": "The authorized domains belonging to the user.",
          "type": "array",
          "items": {
            "$ref": "AuthorizedDomain"
          }
        }
      },
      "id": "ListAuthorizedDomainsResponse"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\nservice Foo {\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n}\nThe JSON representation for Empty is empty JSON object {}.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "DomainMapping": {
      "description": "A domain serving an App Engine application.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative name of the domain serving the application. Example: example.com.",
          "type": "string"
        },
        "resourceRecords": {
          "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "ResourceRecord"
          }
        },
        "name": {
          "description": "Full path to the DomainMapping resource in the API. Example: apps/myapp/domainMapping/example.com.@OutputOnly",
          "type": "string"
        },
        "sslSettings": {
          "description": "SSL configuration for this domain. If unconfigured, this domain will not serve with SSL.",
          "$ref": "SslSettings"
        }
      },
      "id": "DomainMapping"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Cross-service attributes for the location. For example\n{\"cloud.googleapis.com/region\": \"us-east1\"}\n",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: \"projects/example-project/locations/us-east1\"",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: \"us-east1\".",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        }
      },
      "id": "Location"
    },
    "AuthorizedCertificate": {
      "description": "An SSL certificate that a user has been authorized to administer. A user is authorized to administer any certificate that applies to one of their authorized domains.",
      "type": "object",
      "properties": {
        "expireTime": {
          "description": "The time when this certificate expires. To update the renewal time on this certificate, upload an SSL certificate with a different expiration time using AuthorizedCertificates.UpdateAuthorizedCertificate.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "Full path to the AuthorizedCertificate resource in the API. Example: apps/myapp/authorizedCertificates/12345.@OutputOnly",
          "type": "string"
        },
        "domainMappingsCount": {
          "description": "Aggregate count of the domain mappings with this certificate mapped. This count includes domain mappings on applications for which the user does not have VIEWER permissions.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE option.@OutputOnly",
          "format": "int32",
          "type": "integer"
        },
        "domainNames": {
          "description": "Topmost applicable domains of this certificate. This certificate applies to these domains and their subdomains. Example: example.com.@OutputOnly",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Relative name of the certificate. This is a unique value autogenerated on AuthorizedCertificate resource creation. Example: 12345.@OutputOnly",
          "type": "string"
        },
        "displayName": {
          "description": "The user-specified display name of the certificate. This is not guaranteed to be unique. Example: My Certificate.",
          "type": "string"
        },
        "managedCertificate": {
          "$ref": "ManagedCertificate",
          "description": "Only applicable if this certificate is managed by App Engine. Managed certificates are tied to the lifecycle of a DomainMapping and cannot be updated or deleted via the AuthorizedCertificates API. If this certificate is manually administered by the user, this field will be empty.@OutputOnly"
        },
        "certificateRawData": {
          "description": "The SSL certificate serving the AuthorizedCertificate resource. This must be obtained independently from a certificate authority.",
          "$ref": "CertificateRawData"
        },
        "visibleDomainMappings": {
          "description": "The full paths to user visible Domain Mapping resources that have this certificate mapped. Example: apps/myapp/domainMappings/example.com.This may not represent the full list of mapped domain mappings if the user does not have VIEWER permissions on all of the applications that have this certificate mapped. See domain_mappings_count for a complete count.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE option.@OutputOnly",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AuthorizedCertificate"
    },
    "ResourceRecord": {
      "description": "A DNS resource record.",
      "type": "object",
      "properties": {
        "rrdata": {
          "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).",
          "type": "string"
        },
        "name": {
          "description": "Relative name of the object affected by this record. Only applicable for CNAME records. Example: 'www'.",
          "type": "string"
        },
        "type": {
          "enum": [
            "A",
            "AAAA",
            "CNAME"
          ],
          "description": "Resource record type. Example: AAAA.",
          "type": "string",
          "enumDescriptions": [
            "An A resource record. Data is an IPv4 address.",
            "An AAAA resource record. Data is an IPv6 address.",
            "A CNAME resource record. Data is a domain name to be aliased."
          ]
        }
      },
      "id": "ResourceRecord"
    },
    "CreateVersionMetadataV1Alpha": {
      "description": "Metadata for the given google.longrunning.Operation during a google.appengine.v1alpha.CreateVersionRequest.",
      "type": "object",
      "properties": {
        "cloudBuildId": {
          "description": "The Cloud Build ID if one was created as part of the version create. @OutputOnly",
          "type": "string"
        }
      },
      "id": "CreateVersionMetadataV1Alpha"
    },
    "OperationMetadataV1Beta5": {
      "description": "Metadata for the given google.longrunning.Operation.",
      "type": "object",
      "properties": {
        "user": {
          "description": "User who requested this operation.@OutputOnly",
          "type": "string"
        },
        "target": {
          "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly",
          "type": "string"
        },
        "method": {
          "description": "API method name that initiated this operation. Example: google.appengine.v1beta5.Version.CreateVersion.@OutputOnly",
          "type": "string"
        },
        "insertTime": {
          "description": "Timestamp that this operation was created.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "description": "Timestamp that this operation completed.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "OperationMetadataV1Beta5"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse"
    },
    "CertificateRawData": {
      "description": "An SSL certificate obtained from a certificate authority.",
      "type": "object",
      "properties": {
        "publicCertificate": {
          "description": "PEM encoded x.509 public key certificate. This field is set once on certificate creation. Must include the header and footer. Example: \u003cpre\u003e -----BEGIN CERTIFICATE----- \u003ccertificate_value\u003e -----END CERTIFICATE----- \u003c/pre\u003e",
          "type": "string"
        },
        "privateKey": {
          "description": "Unencrypted PEM encoded RSA private key. This field is set once on certificate creation and then encrypted. The key size must be 2048 bits or fewer. Must include the header and footer. Example: \u003cpre\u003e -----BEGIN RSA PRIVATE KEY----- \u003cunencrypted_key_value\u003e -----END RSA PRIVATE KEY----- \u003c/pre\u003e @InputOnly",
          "type": "string"
        }
      },
      "id": "CertificateRawData"
    },
    "Operation": {
      "properties": {
        "done": {
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should have the format of operations/some/unique/name.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "Status": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Status",
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). The error model is designed to be:\nSimple to use and understand for most users\nFlexible enough to meet unexpected needsOverviewThe Status message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a developer-facing English message that helps developers understand and resolve the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package google.rpc that can be used for common error conditions.Language mappingThe Status message is the logical representation of the error model, but it is not necessarily the actual wire format. When the Status message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C.Other usesThe error model and the Status message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments.Example uses of this error model include:\nPartial errors. If a service needs to return partial errors to the client, it may embed the Status in the normal response to indicate the partial errors.\nWorkflow errors. A typical workflow has multiple steps. Each step may have a Status message for error reporting.\nBatch operations. If a client uses batch request and batch response, the Status message should be used directly inside batch response, one for each error sub-response.\nAsynchronous operations. If an API call embeds asynchronous operation results in its response, the status of those operations should be represented directly using the Status message.\nLogging. If some API errors are stored in logs, the message Status could be used directly after any stripping needed for security/privacy reasons.",
      "type": "object"
    },
    "AuthorizedDomain": {
      "description": "A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via Webmaster Central (https://www.google.com/webmasters/verification/home).",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified domain name of the domain authorized for use. Example: example.com.",
          "type": "string"
        },
        "name": {
          "description": "Full path to the AuthorizedDomain resource in the API. Example: apps/myapp/authorizedDomains/example.com.@OutputOnly",
          "type": "string"
        }
      },
      "id": "AuthorizedDomain"
    },
    "LocationMetadata": {
      "description": "Metadata for the given google.cloud.location.Location.",
      "type": "object",
      "properties": {
        "flexibleEnvironmentAvailable": {
          "description": "App Engine Flexible Environment is available in the given location.@OutputOnly",
          "type": "boolean"
        },
        "standardEnvironmentAvailable": {
          "description": "App Engine Standard Environment is available in the given location.@OutputOnly",
          "type": "boolean"
        }
      },
      "id": "LocationMetadata"
    },
    "OperationMetadataV1Beta": {
      "description": "Metadata for the given google.longrunning.Operation.",
      "type": "object",
      "properties": {
        "ephemeralMessage": {
          "description": "Ephemeral message that may change every time the operation is polled. @OutputOnly",
          "type": "string"
        },
        "method": {
          "description": "API method that initiated this operation. Example: google.appengine.v1beta.Versions.CreateVersion.@OutputOnly",
          "type": "string"
        },
        "endTime": {
          "description": "Time that this operation completed.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "createVersionMetadata": {
          "$ref": "CreateVersionMetadataV1Beta"
        },
        "warning": {
          "description": "Durable messages that persist on every operation poll. @OutputOnly",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "insertTime": {
          "description": "Time that this operation was created.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "user": {
          "description": "User who requested this operation.@OutputOnly",
          "type": "string"
        },
        "target": {
          "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly",
          "type": "string"
        }
      },
      "id": "OperationMetadataV1Beta"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "id": "ListOperationsResponse"
    },
    "OperationMetadata": {
      "description": "Metadata for the given google.longrunning.Operation.",
      "type": "object",
      "properties": {
        "method": {
          "description": "API method that initiated this operation. Example: google.appengine.v1beta4.Version.CreateVersion.@OutputOnly",
          "type": "string"
        },
        "endTime": {
          "description": "Timestamp that this operation completed.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "operationType": {
          "description": "Type of this operation. Deprecated, use method field instead. Example: \"create_version\".@OutputOnly",
          "type": "string"
        },
        "insertTime": {
          "description": "Timestamp that this operation was created.@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "user": {
          "description": "User who requested this operation.@OutputOnly",
          "type": "string"
        },
        "target": {
          "description": "Name of the resource that this operation is acting on. Example: apps/myapp/modules/default.@OutputOnly",
          "type": "string"
        }
      },
      "id": "OperationMetadata"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "version": "v1alpha",
  "baseUrl": "https://appengine.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/appengine.admin": {
          "description": "View and manage your applications deployed on Google App Engine"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "description": "The App Engine Admin API enables developers to provision and manage their App Engine applications.",
  "servicePath": "",
  "rootUrl": "https://appengine.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "appengine",
  "batchPath": "batch",
  "id": "appengine:v1alpha",
  "documentationLink": "https://cloud.google.com/appengine/docs/admin-api/",
  "revision": "20180105",
  "title": "Google App Engine Admin API",
  "discoveryVersion": "v1",
  "ownerName": "Google"
}
