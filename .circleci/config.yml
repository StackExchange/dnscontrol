version: 2.1

parameters:
  cache-key:
    type: integer
    default: 1634492241
    description: Change to force cache reset `pwsh > Get-Date -UFormat %s`

jobs:
  build:

    docker:
      - image: cimg/go:1.17.2
    resource_class: large

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - linux-go-{{ checksum "go.sum" }}-<< pipeline.parameters.cache-key >>
      - run:
          name: Build binaries
          command: go run build/build.go

      - run:
          name: Run unit tests

          # store the results of our tests in the $TEST_RESULTS directory
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES

      - save_cache:
          key: linux-go-{{ checksum "go.sum" }}-<< pipeline.parameters.cache-key >>
          paths:
            - "../go/pkg/mod"

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

  integration-tests:
    docker:
      - image: cimg/go:1.17.2

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results
      GOTESTSUM_FORMAT: testname

      BIND_DOMAIN: example.com

      HEXONET_DOMAIN: a-b-c-movies.com
      HEXONET_ENTITY: OTE
      HEXONET_PW: test.passw0rd
      HEXONET_UID: test.user

      AZURE_DNS_RESOURCE_GROUP: DNSControl

      GCLOUD_EMAIL: dnscontrol@dnscontrol-dev.iam.gserviceaccount.com
      GCLOUD_PROJECT: dnscontrol-dev
      GCLOUD_TYPE: service_account

      NAMEDOTCOM_URL: api.name.com
      NAMEDOTCOM_USER: dnscontroltest

    parameters:
      provider:
        type: string

    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - linux-go-{{ checksum "go.sum" }}-<< pipeline.parameters.cache-key >>

      - run:
          name: Run integration tests for << parameters.provider >> provider
          working_directory: integrationTest
          no_output_timeout: 20m
          command: |
            if [ -n "$<< parameters.provider >>_DOMAIN" ] ; then
              gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- -timeout 20m -v -verbose -provider << parameters.provider >> -cfworkers=false
            else
              echo "Skip test for << parameters.provider >> provider"
            fi

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

  release:
    docker:
      - image: cimg/go:1.17
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install goreleaser
          command: curl -sL https://git.io/goreleaser | bash
      - run: goreleaser release

workflows:
  version: 2
  build-workflow:
    jobs:
      - build

      - integration-tests:
          requires: [build]
          context: DNSProviders
          matrix:
            parameters:
              provider:
# Providers that don't require secrets: (alphabetical)
                - BIND
                - HEXONET
# Providers designated "officially supported": (alphabetical)
                - AZURE_DNS
                - CLOUDFLAREAPI
                - GCLOUD
                - NAMEDOTCOM
                - ROUTE53
# All others: (alphabetical)
                - CLOUDNS
                - DIGITALOCEAN
                - GANDI_V5
                - HEDNS
                - INWX
                - POWERDNS

      - release:
          # Only run this job on git tag pushes
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
